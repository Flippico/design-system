{"version":3,"file":"flp-select.stories-DKAJHyQs.js","sources":["../src/components/flp-select/flp-select.styles.ts","../node_modules/lit-html/directives/unsafe-html.js","../src/components/flp-select/flp-select.ts","../src/components/flp-option/flp-option.styles.ts","../src/components/flp-option/flp-option.ts"],"sourcesContent":["import { css } from 'lit';\nimport componentStyles from '../../styles/component.styles';\nimport formControlStyles from '../../styles/form-control.styles';\n\nexport const flippico = css`\n  ${componentStyles}\n  ${formControlStyles}\n\n  :host {\n    display: block;\n  }\n\n  /** The popup */\n  .select {\n    flex: 1 1 auto;\n    display: inline-flex;\n    width: 100%;\n    position: relative;\n    vertical-align: middle;\n  }\n\n  .select::part(popup) {\n    z-index: var(--flp-z-index-dropdown);\n  }\n\n  .select[data-current-placement^='top']::part(popup) {\n    transform-origin: bottom;\n  }\n\n  .select[data-current-placement^='bottom']::part(popup) {\n    transform-origin: top;\n  }\n\n  /* Combobox */\n  .select__combobox {\n    flex: 1;\n    display: flex;\n    width: 100%;\n    min-width: 0;\n    position: relative;\n    align-items: center;\n    justify-content: start;\n    font-family: var(--flp-input-font-family);\n    font-weight: var(--flp-input-font-weight);\n    letter-spacing: var(--flp-input-letter-spacing);\n    vertical-align: middle;\n    overflow: hidden;\n    cursor: pointer;\n    transition:\n      var(--flp-transition-fast) color,\n      var(--flp-transition-fast) border,\n      var(--flp-transition-fast) box-shadow,\n      var(--flp-transition-fast) background-color;\n  }\n\n  .select__display-input {\n    position: relative;\n    width: 100%;\n    font: inherit;\n    border: none;\n    background: none;\n    color: var(--flp-input-color);\n    cursor: inherit;\n    overflow: hidden;\n    padding: 0;\n    margin: 0;\n    -webkit-appearance: none;\n  }\n\n  .select__display-input::placeholder {\n    color: var(--flp-input-placeholder-color);\n  }\n\n  .select:not(.select--disabled):hover .select__display-input {\n    color: var(--flp-input-color-hover);\n  }\n\n  .select__display-input:focus {\n    outline: none;\n  }\n\n  /* Visually hide the display input when multiple is enabled */\n  .select--multiple:not(.select--placeholder-visible) .select__display-input {\n    position: absolute;\n    z-index: -1;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n  }\n\n  .select__value-input {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n    margin: 0;\n    opacity: 0;\n    z-index: -1;\n  }\n\n  .select__tags {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    flex-wrap: wrap;\n    margin-inline-start: var(--flp-spacing-2x-small);\n  }\n\n  .select__tags::slotted(sl-tag) {\n    cursor: pointer !important;\n  }\n\n  .select--disabled .select__tags,\n  .select--disabled .select__tags::slotted(sl-tag) {\n    cursor: not-allowed !important;\n  }\n\n  /* Standard selects */\n  .select--standard .select__combobox {\n    background-color: var(--flp-input-background-color);\n    border: solid var(--flp-input-border-width) var(--flp-input-border-color);\n  }\n\n  .select--standard.select--disabled .select__combobox {\n    background-color: var(--flp-input-background-color-disabled);\n    border-color: var(--flp-input-border-color-disabled);\n    color: var(--flp-input-color-disabled);\n    opacity: 0.5;\n    cursor: not-allowed;\n    outline: none;\n  }\n\n  .select--standard:not(.select--disabled).select--open .select__combobox,\n  .select--standard:not(.select--disabled).select--focused .select__combobox {\n    background-color: var(--flp-input-background-color-focus);\n    border-color: var(--flp-input-border-color-focus);\n    box-shadow: 0 0 0 var(--flp-focus-ring-width) var(--flp-input-focus-ring-color);\n  }\n\n  /* Filled selects */\n  .select--filled .select__combobox {\n    border: none;\n    background-color: var(--flp-input-filled-background-color);\n    color: var(--flp-input-color);\n  }\n\n  .select--filled:hover:not(.select--disabled) .select__combobox {\n    background-color: var(--flp-input-filled-background-color-hover);\n  }\n\n  .select--filled.select--disabled .select__combobox {\n    background-color: var(--flp-input-filled-background-color-disabled);\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .select--filled:not(.select--disabled).select--open .select__combobox,\n  .select--filled:not(.select--disabled).select--focused .select__combobox {\n    background-color: var(--flp-input-filled-background-color-focus);\n    outline: var(--flp-focus-ring);\n  }\n\n  /* Sizes */\n  .select--small .select__combobox {\n    border-radius: var(--flp-input-border-radius-small);\n    font-size: var(--flp-input-font-size-small);\n    min-height: var(--flp-input-height-small);\n    padding-block: 0;\n    padding-inline: var(--flp-input-spacing-small);\n  }\n\n  .select--small .select__clear {\n    margin-inline-start: var(--flp-input-spacing-small);\n  }\n\n  .select--small .select__prefix::slotted(*) {\n    margin-inline-end: var(--flp-input-spacing-small);\n  }\n\n  .select--small.select--multiple:not(.select--placeholder-visible) .select__combobox {\n    padding-block: 2px;\n    padding-inline-start: 0;\n  }\n\n  .select--small .select__tags {\n    gap: 2px;\n  }\n\n  .select--medium .select__combobox {\n    border-radius: var(--flp-input-border-radius-medium);\n    font-size: var(--flp-input-font-size-medium);\n    min-height: var(--flp-input-height-medium);\n    padding-block: 0;\n    padding-inline: var(--flp-input-spacing-medium);\n  }\n\n  .select--medium .select__clear {\n    margin-inline-start: var(--flp-input-spacing-medium);\n  }\n\n  .select--medium .select__prefix::slotted(*) {\n    margin-inline-end: var(--flp-input-spacing-medium);\n  }\n\n  .select--medium.select--multiple:not(.select--placeholder-visible) .select__combobox {\n    padding-inline-start: 0;\n    padding-block: 3px;\n  }\n\n  .select--medium .select__tags {\n    gap: 3px;\n  }\n\n  .select--large .select__combobox {\n    border-radius: var(--flp-input-border-radius-large);\n    font-size: var(--flp-input-font-size-large);\n    min-height: var(--flp-input-height-large);\n    padding-block: 0;\n    padding-inline: var(--flp-input-spacing-large);\n  }\n\n  .select--large .select__clear {\n    margin-inline-start: var(--flp-input-spacing-large);\n  }\n\n  .select--large .select__prefix::slotted(*) {\n    margin-inline-end: var(--flp-input-spacing-large);\n  }\n\n  .select--large.select--multiple:not(.select--placeholder-visible) .select__combobox {\n    padding-inline-start: 0;\n    padding-block: 4px;\n  }\n\n  .select--large .select__tags {\n    gap: 4px;\n  }\n\n  /* Pills */\n  .select--pill.select--small .select__combobox {\n    border-radius: var(--flp-input-height-small);\n  }\n\n  .select--pill.select--medium .select__combobox {\n    border-radius: var(--flp-input-height-medium);\n  }\n\n  .select--pill.select--large .select__combobox {\n    border-radius: var(--flp-input-height-large);\n  }\n\n  /* Prefix */\n  .select__prefix {\n    flex: 0;\n    display: inline-flex;\n    align-items: center;\n    color: var(--flp-input-placeholder-color);\n  }\n\n  /* Clear button */\n  .select__clear {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    font-size: inherit;\n    color: var(--flp-input-icon-color);\n    border: none;\n    background: none;\n    padding: 0;\n    transition: var(--flp-transition-fast) color;\n    cursor: pointer;\n  }\n\n  .select__clear:hover {\n    color: var(--flp-input-icon-color-hover);\n  }\n\n  .select__clear:focus {\n    outline: none;\n  }\n\n  /* Expand icon */\n  .select__expand-icon {\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    transition: var(--flp-transition-medium) rotate ease;\n    rotate: 0;\n    margin-inline-start: var(--flp-spacing-small);\n  }\n\n  .select--open .select__expand-icon {\n    rotate: -180deg;\n  }\n\n  /* Listbox */\n  .select__listbox {\n    display: block;\n    position: relative;\n    font-family: var(--flp-font-light);\n    font-size: var(--flp-font-size-medium);\n    font-weight: var(--flp-font-weight-normal);\n    box-shadow: var(--flp-shadow-large);\n    background: var(--flp-panel-background-color);\n    border: solid var(--flp-panel-border-width) var(--flp-panel-border-color);\n    border-radius: var(--flp-border-radius-medium);\n    padding-block: var(--flp-spacing-x-small);\n    padding-inline: 0;\n    overflow: auto;\n    overscroll-behavior: none;\n\n    /* Make sure it adheres to the popup's auto size */\n    max-width: var(--auto-size-available-width);\n    max-height: var(--auto-size-available-height);\n  }\n\n  .select__listbox ::slotted(sl-divider) {\n    --spacing: var(--flp-spacing-x-small);\n  }\n\n  .select__listbox ::slotted(small) {\n    font-size: var(--flp-font-size-small);\n    font-weight: var(--flp-font-weight-semibold);\n    color: var(--flp-color-neutral-500);\n    padding-block: var(--flp-spacing-x-small);\n    padding-inline: var(--flp-spacing-x-large);\n  }\n  `;","import{nothing as D,noChange as R}from\"../lit-html.js\";import{Directive as i,PartType as t,directive as e}from\"../directive.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */class le extends i{constructor(i){if(super(i),this.it=D,i.type!==t.CHILD)throw Error(this.constructor.directiveName+\"() can only be used in child bindings\")}render(t){if(t===D||null==t)return this._t=void 0,this.it=t;if(t===R)return t;if(\"string\"!=typeof t)throw Error(this.constructor.directiveName+\"() called with a non-string value\");if(t===this.it)return this._t;this.it=t;const i=[t];return i.raw=i,this._t={_$litType$:this.constructor.resultType,strings:i,values:[]}}}le.directiveName=\"unsafeHTML\",le.resultType=1;const ae=e(le);export{le as UnsafeHTMLDirective,ae as unsafeHTML};\n//# sourceMappingURL=unsafe-html.js.map\n","import { CSSResultGroup, TemplateResult, html } from 'lit';\nimport FlpElement from '../../utils/flippico-element';\nimport {customElement, property, query, state} from 'lit/decorators.js';\n\nimport { flippico } from './flp-select.styles';\nimport { HasSlotController } from '../../utils/slot';\nimport { FormControlController } from '../../utils/form';\nimport { defaultValue } from '../../utils/default-value';\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\nimport { watch } from '../../utils/watch';\nimport { animateTo, stopAnimations } from '../../utils/animate';\nimport { scrollIntoView } from '../../utils/scroll';\nimport { getAnimation, setDefaultAnimation } from '../../utils/animation-registry';\nimport { waitForEvent } from '../../utils/event';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { FlpOption } from '../flp-option/flp-option';\nimport { FlpRemoveEvent } from '../../events';\nimport type { FlpPopup } from '../flp-popup/flp-popup';\n\n/**\n * @summary This the flp-select component\n *\n * @tag flp-select\n */\n @customElement(\"flp-select\")\nexport class FlpSelect extends FlpElement {\n  static styles: CSSResultGroup = [flippico];\n\n  private readonly formControlController = new FormControlController(this, {\n    assumeInteractionOn: ['flp-blur', 'flp-input']\n  });\n  private readonly hasSlotController = new HasSlotController(this, 'help-text', 'label');\n  private typeToSelectString = '';\n  private typeToSelectTimeout: number;\n\n  @query('.select') popup: FlpPopup;\n  @query('.select__combobox') combobox: HTMLSlotElement;\n  @query('.select__display-input') displayInput: HTMLInputElement;\n  @query('.select__value-input') valueInput: HTMLInputElement;\n  @query('.select__listbox') listbox: HTMLSlotElement;\n\n  @state() private hasFocus = false;\n  @state() displayLabel = '';\n  @state() currentOption: FlpOption;\n  @state() selectedOptions: FlpOption[] = [];\n\n  /** The name of the select, submitted as a name/value pair with form data. */\n  @property() name = '';\n\n  /**\n   * The current value of the select, submitted as a name/value pair with form data. When `multiple` is enabled, the\n   * value attribute will be a space-delimited list of values based on the options selected, and the value property will\n   * be an array. **For this reason, values must not contain spaces.**\n   */\n  @property({\n    converter: {\n      fromAttribute: (value: string) => value.split(' '),\n      toAttribute: (value: string[]) => value.join(' ')\n    }\n  })\n  value: string | string[] = '';\n\n  /** The default value of the form control. Primarily used for resetting the form control. */\n  @defaultValue() defaultValue: string | string[] = '';\n\n  /** The select's size. */\n  @property({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Placeholder text to show as a hint when the select is empty. */\n  @property() placeholder = '';\n\n  /** Allows more than one option to be selected. */\n  @property({ type: Boolean, reflect: true }) multiple = false;\n\n  /**\n   * The maximum number of selected options to show when `multiple` is true. After the maximum, \"+n\" will be shown to\n   * indicate the number of additional items that are selected. Set to 0 to remove the limit.\n   */\n  @property({ attribute: 'max-options-visible', type: Number }) maxOptionsVisible = 3;\n\n  /** Disables the select control. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /** Adds a clear button when the select is not empty. */\n  @property({ type: Boolean }) clearable = false;\n\n  /**\n   * Indicates whether or not the select is open. You can toggle this attribute to show and hide the menu, or you can\n   * use the `show()` and `hide()` methods and this attribute will reflect the select's open state.\n   */\n  @property({ type: Boolean, reflect: true }) open = false;\n\n  /**\n   * Enable this option to prevent the listbox from being clipped when the component is placed inside a container with\n   * `overflow: auto|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all, scenarios.\n   */\n  @property({ type: Boolean }) hoist = false;\n\n  /** Draws a filled select. */\n  @property({ type: Boolean, reflect: true }) filled = false;\n\n  /** Draws a pill-style select with rounded edges. */\n  @property({ type: Boolean, reflect: true }) pill = false;\n\n  /** The select's label. If you need to display HTML, use the `label` slot instead. */\n  @property() label = '';\n\n  /**\n   * The preferred placement of the select's menu. Note that the actual placement may vary as needed to keep the listbox\n   * inside of the viewport.\n   */\n  @property({ reflect: true }) placement: 'top' | 'bottom' = 'bottom';\n\n  /** The select's help text. If you need to display HTML, use the `help-text` slot instead. */\n  @property({ attribute: 'help-text' }) helpText = '';\n\n  /**\n   * By default, form controls are associated with the nearest containing `<form>` element. This attribute allows you\n   * to place the form control outside of a form and associate it with the form that has this `id`. The form must be in\n   * the same document or shadow root for this to work.\n   */\n  @property({ reflect: true }) form = '';\n\n  /** The select's required attribute. */\n  @property({ type: Boolean, reflect: true }) required = false;\n\n  /**\n   * A function that customizes the tags to be rendered when multiple=true. The first argument is the option, the second\n   * is the current tag's index.  The function should return either a Lit TemplateResult or a string containing trusted HTML of the symbol to render at\n   * the specified value.\n   */\n  @property() getTag: (option: FlpOption, index: number) => TemplateResult | string | HTMLElement = option => {\n    return html`\n      <flp-tag\n        part=\"tag\"\n        exportparts=\"\n              base:tag__base,\n              content:tag__content,\n              remove-button:tag__remove-button,\n              remove-button__base:tag__remove-button__base\n            \"\n        ?pill=${this.pill}\n        size=${this.size}\n        removable\n        @flp-remove=${(event: FlpRemoveEvent) => this.handleTagRemove(event, option)}\n      >\n        ${option.getTextLabel()}\n      </flp-tag>\n    `;\n  };\n\n  /** Gets the validity state object */\n  get validity() {\n    return this.valueInput.validity;\n  }\n\n  /** Gets the validation message */\n  get validationMessage() {\n    return this.valueInput.validationMessage;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Because this is a form control, it shouldn't be opened initially\n    this.open = false;\n  }\n\n  private addOpenListeners() {\n    //\n    // Listen on the root node instead of the document in case the elements are inside a shadow root\n    //\n    // https://github.com/shoelace-style/shoelace/issues/1763\n    //\n    const root = this.getRootNode();\n    // @ts-ignore\n    root.addEventListener('focusin', this.handleDocumentFocusIn);\n    // @ts-ignore\n    root.addEventListener('keydown', this.handleDocumentKeyDown);\n    // @ts-ignore\n    root.addEventListener('mousedown', this.handleDocumentMouseDown);\n  }\n\n  private removeOpenListeners() {\n    const root = this.getRootNode();\n    // @ts-ignore\n    root.removeEventListener('focusin', this.handleDocumentFocusIn);\n    // @ts-ignore\n    root.removeEventListener('keydown', this.handleDocumentKeyDown);\n    // @ts-ignore\n    root.removeEventListener('mousedown', this.handleDocumentMouseDown);\n  }\n\n  private handleFocus() {\n    this.hasFocus = true;\n    this.displayInput.setSelectionRange(0, 0);\n    this.emit('flp-focus');\n  }\n\n  private handleBlur() {\n    this.hasFocus = false;\n    this.emit('flp-blur');\n  }\n\n  private handleDocumentFocusIn = (event: KeyboardEvent) => {\n    // Close when focusing out of the select\n    const path = event.composedPath();\n    if (this && !path.includes(this)) {\n      this.hide();\n    }\n  };\n\n  private handleDocumentKeyDown = (event: KeyboardEvent) => {\n    const target = event.target as HTMLElement;\n    const isClearButton = target.closest('.select__clear') !== null;\n    const isIconButton = target.closest('flp-icon-button') !== null;\n\n    // Ignore presses when the target is an icon button (e.g. the remove button in <flp-tag>)\n    if (isClearButton || isIconButton) {\n      return;\n    }\n\n    // Close when pressing escape\n    if (event.key === 'Escape' && this.open) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.hide();\n      this.displayInput.focus({ preventScroll: true });\n    }\n\n    // Handle enter and space. When pressing space, we allow for type to select behaviors so if there's anything in the\n    // buffer we _don't_ close it.\n    if (event.key === 'Enter' || (event.key === ' ' && this.typeToSelectString === '')) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n\n      // If it's not open, open it\n      if (!this.open) {\n        this.show();\n        return;\n      }\n\n      // If it is open, update the value based on the current selection and close it\n      if (this.currentOption && !this.currentOption.disabled) {\n        if (this.multiple) {\n          this.toggleOptionSelection(this.currentOption);\n        } else {\n          this.setSelectedOptions(this.currentOption);\n        }\n\n        // Emit after updating\n        this.updateComplete.then(() => {\n          this.emit('flp-input');\n          this.emit('flp-change');\n        });\n\n        if (!this.multiple) {\n          this.hide();\n          this.displayInput.focus({ preventScroll: true });\n        }\n      }\n\n      return;\n    }\n\n    // Navigate options\n    if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n      const allOptions = this.getAllOptions();\n      const currentIndex = allOptions.indexOf(this.currentOption);\n      let newIndex = Math.max(0, currentIndex);\n\n      // Prevent scrolling\n      event.preventDefault();\n\n      // Open it\n      if (!this.open) {\n        this.show();\n\n        // If an option is already selected, stop here because we want that one to remain highlighted when the listbox\n        // opens for the first time\n        if (this.currentOption) {\n          return;\n        }\n      }\n\n      if (event.key === 'ArrowDown') {\n        newIndex = currentIndex + 1;\n        if (newIndex > allOptions.length - 1) newIndex = 0;\n      } else if (event.key === 'ArrowUp') {\n        newIndex = currentIndex - 1;\n        if (newIndex < 0) newIndex = allOptions.length - 1;\n      } else if (event.key === 'Home') {\n        newIndex = 0;\n      } else if (event.key === 'End') {\n        newIndex = allOptions.length - 1;\n      }\n\n      this.setCurrentOption(allOptions[newIndex]);\n    }\n\n    // All other \"printable\" keys trigger type to select\n    if (event.key.length === 1 || event.key === 'Backspace') {\n      const allOptions = this.getAllOptions();\n\n      // Don't block important key combos like CMD+R\n      if (event.metaKey || event.ctrlKey || event.altKey) {\n        return;\n      }\n\n      // Open, unless the key that triggered is backspace\n      if (!this.open) {\n        if (event.key === 'Backspace') {\n          return;\n        }\n\n        this.show();\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n\n      clearTimeout(this.typeToSelectTimeout);\n      this.typeToSelectTimeout = window.setTimeout(() => (this.typeToSelectString = ''), 1000);\n\n      if (event.key === 'Backspace') {\n        this.typeToSelectString = this.typeToSelectString.slice(0, -1);\n      } else {\n        this.typeToSelectString += event.key.toLowerCase();\n      }\n\n      for (const option of allOptions) {\n        const label = option.getTextLabel().toLowerCase();\n\n        if (label.startsWith(this.typeToSelectString)) {\n          this.setCurrentOption(option);\n          break;\n        }\n      }\n    }\n  };\n\n  private handleDocumentMouseDown = (event: MouseEvent) => {\n    // Close when clicking outside of the select\n    const path = event.composedPath();\n    if (this && !path.includes(this)) {\n      this.hide();\n    }\n  };\n\n  private handleLabelClick() {\n    this.displayInput.focus();\n  }\n\n  private handleComboboxMouseDown(event: MouseEvent) {\n    const path = event.composedPath();\n    const isIconButton = path.some(el => el instanceof Element && el.tagName.toLowerCase() === 'flp-icon-button');\n\n    // Ignore disabled controls and clicks on tags (remove buttons)\n    if (this.disabled || isIconButton) {\n      return;\n    }\n\n    event.preventDefault();\n    this.displayInput.focus({ preventScroll: true });\n    this.open = !this.open;\n  }\n\n  private handleComboboxKeyDown(event: KeyboardEvent) {\n    event.stopPropagation();\n    this.handleDocumentKeyDown(event);\n  }\n\n  private handleClearClick(event: MouseEvent) {\n    event.stopPropagation();\n\n    if (this.value !== '') {\n      this.setSelectedOptions([]);\n      this.displayInput.focus({ preventScroll: true });\n\n      // Emit after update\n      this.updateComplete.then(() => {\n        this.emit('flp-clear');\n        this.emit('flp-input');\n        this.emit('flp-change');\n      });\n    }\n  }\n\n  private handleClearMouseDown(event: MouseEvent) {\n    // Don't lose focus or propagate events when clicking the clear button\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  private handleOptionClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    const option = target.closest('flp-option');\n    const oldValue = this.value;\n\n    if (option && !option.disabled) {\n      if (this.multiple) {\n        this.toggleOptionSelection(option);\n      } else {\n        this.setSelectedOptions(option);\n      }\n\n      // Set focus after updating so the value is announced by screen readers\n      this.updateComplete.then(() => this.displayInput.focus({ preventScroll: true }));\n\n      if (this.value !== oldValue) {\n        // Emit after updating\n        this.updateComplete.then(() => {\n          this.emit('flp-input');\n          this.emit('flp-change');\n        });\n      }\n\n      if (!this.multiple) {\n        this.hide();\n        this.displayInput.focus({ preventScroll: true });\n      }\n    }\n  }\n\n  private handleDefaultSlotChange() {\n    const allOptions = this.getAllOptions();\n    const value = Array.isArray(this.value) ? this.value : [this.value];\n    const values: string[] = [];\n\n    // Check for duplicate values in menu items\n    if (customElements.get('flp-option')) {\n      allOptions.forEach(option => values.push(option.value));\n\n      // Select only the options that match the new value\n      this.setSelectedOptions(allOptions.filter(el => value.includes(el.value)));\n    } else {\n      // Rerun this handler when <flp-option> is registered\n      customElements.whenDefined('flp-option').then(() => this.handleDefaultSlotChange());\n    }\n  }\n\n  private handleTagRemove(event: FlpRemoveEvent, option: FlpOption) {\n    event.stopPropagation();\n\n    if (!this.disabled) {\n      this.toggleOptionSelection(option, false);\n\n      // Emit after updating\n      this.updateComplete.then(() => {\n        this.emit('flp-input');\n        this.emit('flp-change');\n      });\n    }\n  }\n\n  // Gets an array of all <flp-option> elements\n  private getAllOptions() {\n    return [...this.querySelectorAll<FlpOption>('flp-option')];\n  }\n\n  // Gets the first <flp-option> element\n  private getFirstOption() {\n    return this.querySelector<FlpOption>('flp-option');\n  }\n\n  // Sets the current option, which is the option the user is currently interacting with (e.g. via keyboard). Only one\n  // option may be \"current\" at a time.\n  private setCurrentOption(option: FlpOption | null) {\n    const allOptions = this.getAllOptions();\n\n    // Clear selection\n    allOptions.forEach(el => {\n      el.current = false;\n      el.tabIndex = -1;\n    });\n\n    // Select the target option\n    if (option) {\n      this.currentOption = option;\n      option.current = true;\n      option.tabIndex = 0;\n      option.focus();\n    }\n  }\n\n  // Sets the selected option(s)\n  private setSelectedOptions(option: FlpOption | FlpOption[]) {\n    const allOptions = this.getAllOptions();\n    const newSelectedOptions = Array.isArray(option) ? option : [option];\n\n    // Clear existing selection\n    allOptions.forEach(el => (el.selected = false));\n\n    // Set the new selection\n    if (newSelectedOptions.length) {\n      newSelectedOptions.forEach(el => (el.selected = true));\n    }\n\n    // Update selection, value, and display label\n    this.selectionChanged();\n  }\n\n  // Toggles an option's selected state\n  private toggleOptionSelection(option: FlpOption, force?: boolean) {\n    if (force === true || force === false) {\n      option.selected = force;\n    } else {\n      option.selected = !option.selected;\n    }\n\n    this.selectionChanged();\n  }\n\n  // This method must be called whenever the selection changes. It will update the selected options cache, the current\n  // value, and the display value\n  private selectionChanged() {\n    // Update selected options cache\n    this.selectedOptions = this.getAllOptions().filter(el => el.selected);\n\n    // Update the value and display label\n    if (this.multiple) {\n      this.value = this.selectedOptions.map(el => el.value);\n\n      if (this.placeholder && this.value.length === 0) {\n        // When no items are selected, keep the value empty so the placeholder shows\n        this.displayLabel = '';\n      } else {\n        this.displayLabel = 'numOptionsSelected';\n      }\n    } else {\n      this.value = this.selectedOptions[0]?.value ?? '';\n      this.displayLabel = this.selectedOptions[0]?.getTextLabel() ?? '';\n    }\n\n    // Update validity\n    this.updateComplete.then(() => {\n      this.formControlController.updateValidity();\n    });\n  }\n  protected get tags() {\n    return this.selectedOptions.map((option, index) => {\n      if (index < this.maxOptionsVisible || this.maxOptionsVisible <= 0) {\n        const tag = this.getTag(option, index);\n        // Wrap so we can handle the remove\n        return html`<div @flp-remove=${(e: FlpRemoveEvent) => this.handleTagRemove(e, option)}>\n          ${typeof tag === 'string' ? unsafeHTML(tag) : tag}\n        </div>`;\n      } else if (index === this.maxOptionsVisible) {\n        // Hit tag limit\n        return html`<flp-tag>+${this.selectedOptions.length - index}</flp-tag>`;\n      }\n      return html``;\n    });\n  }\n\n  private handleInvalid(event: Event) {\n    this.formControlController.setValidity(false);\n    this.formControlController.emitInvalidEvent(event);\n  }\n\n  @watch('disabled', { waitUntilFirstUpdate: true })\n  handleDisabledChange() {\n    // Close the listbox when the control is disabled\n    if (this.disabled) {\n      this.open = false;\n      this.handleOpenChange();\n    }\n  }\n\n  @watch('value', { waitUntilFirstUpdate: true })\n  handleValueChange() {\n    const allOptions = this.getAllOptions();\n    const value = Array.isArray(this.value) ? this.value : [this.value];\n\n    // Select only the options that match the new value\n    this.setSelectedOptions(allOptions.filter(el => value.includes(el.value)));\n  }\n\n  @watch('open', { waitUntilFirstUpdate: true })\n  async handleOpenChange() {\n    if (this.open && !this.disabled) {\n      // Reset the current option\n      this.setCurrentOption(this.selectedOptions[0] || this.getFirstOption());\n\n      // Show\n      this.emit('flp-show');\n      this.addOpenListeners();\n\n      await stopAnimations(this);\n      this.listbox.hidden = false;\n      this.popup.active = true;\n\n      // Select the appropriate option based on value after the listbox opens\n      requestAnimationFrame(() => {\n        this.setCurrentOption(this.currentOption);\n      });\n\n      const { keyframes, options } = getAnimation(this, 'select.show', { dir: 'ltr' });\n      await animateTo(this.popup.popup, keyframes, options);\n\n      // Make sure the current option is scrolled into view (required for Safari)\n      if (this.currentOption) {\n        scrollIntoView(this.currentOption, this.listbox, 'vertical', 'auto');\n      }\n\n      this.emit('flp-after-show');\n    } else {\n      // Hide\n      this.emit('flp-hide');\n      this.removeOpenListeners();\n\n      await stopAnimations(this);\n      const { keyframes, options } = getAnimation(this, 'select.hide', { dir: 'ltr' });\n      await animateTo(this.popup.popup, keyframes, options);\n      this.listbox.hidden = true;\n      this.popup.active = false;\n\n      this.emit('flp-after-hide');\n    }\n  }\n\n  /** Shows the listbox. */\n  async show() {\n    if (this.open || this.disabled) {\n      this.open = false;\n      return undefined;\n    }\n\n    this.open = true;\n    return waitForEvent(this, 'flp-after-show');\n  }\n\n  /** Hides the listbox. */\n  async hide() {\n    if (!this.open || this.disabled) {\n      this.open = false;\n      return undefined;\n    }\n\n    this.open = false;\n    return waitForEvent(this, 'flp-after-hide');\n  }\n\n  /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */\n  checkValidity() {\n    return this.valueInput.checkValidity();\n  }\n\n  /** Gets the associated form, if one exists. */\n  getForm(): HTMLFormElement | null {\n    return this.formControlController.getForm();\n  }\n\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  reportValidity() {\n    return this.valueInput.reportValidity();\n  }\n\n  /** Sets a custom validation message. Pass an empty string to restore validity. */\n  setCustomValidity(message: string) {\n    this.valueInput.setCustomValidity(message);\n    this.formControlController.updateValidity();\n  }\n\n  /** Sets focus on the control. */\n  focus(options?: FocusOptions) {\n    this.displayInput.focus(options);\n  }\n\n  /** Removes focus from the control. */\n  blur() {\n    this.displayInput.blur();\n  }\n\n  render() {\n    const hasLabelSlot = this.hasSlotController.test('label');\n    const hasHelpTextSlot = this.hasSlotController.test('help-text');\n    const hasLabel = this.label ? true : !!hasLabelSlot;\n    const hasHelpText = this.helpText ? true : !!hasHelpTextSlot;\n    const hasClearIcon = this.clearable && !this.disabled && this.value.length > 0;\n    const isPlaceholderVisible = this.placeholder && this.value.length === 0;\n\n    return html`\n      <div\n        part=\"form-control\"\n        class=${classMap({\n          'form-control': true,\n          'form-control--small': this.size === 'small',\n          'form-control--medium': this.size === 'medium',\n          'form-control--large': this.size === 'large',\n          'form-control--has-label': hasLabel,\n          'form-control--has-help-text': hasHelpText\n        })}\n      >\n        <label\n          id=\"label\"\n          part=\"form-control-label\"\n          class=\"form-control__label\"\n          aria-hidden=${hasLabel ? 'false' : 'true'}\n          @click=${this.handleLabelClick}\n        >\n          <slot name=\"label\">${this.label}</slot>\n        </label>\n\n        <div part=\"form-control-input\" class=\"form-control-input\">\n          <flp-popup\n            class=${classMap({\n              select: true,\n              'select--standard': true,\n              'select--filled': this.filled,\n              'select--pill': this.pill,\n              'select--open': this.open,\n              'select--disabled': this.disabled,\n              'select--multiple': this.multiple,\n              'select--focused': this.hasFocus,\n              'select--placeholder-visible': isPlaceholderVisible,\n              'select--top': this.placement === 'top',\n              'select--bottom': this.placement === 'bottom',\n              'select--small': this.size === 'small',\n              'select--medium': this.size === 'medium',\n              'select--large': this.size === 'large'\n            })}\n            placement=${this.placement}\n            strategy=${this.hoist ? 'fixed' : 'absolute'}\n            flip\n            shift\n            sync=\"width\"\n            auto-size=\"vertical\"\n            auto-size-padding=\"10\"\n          >\n            <div\n              part=\"combobox\"\n              class=\"select__combobox\"\n              slot=\"anchor\"\n              @keydown=${this.handleComboboxKeyDown}\n              @mousedown=${this.handleComboboxMouseDown}\n            >\n              <slot part=\"prefix\" name=\"prefix\" class=\"select__prefix\"></slot>\n\n              <input\n                part=\"display-input\"\n                class=\"select__display-input\"\n                type=\"text\"\n                placeholder=${this.placeholder}\n                .disabled=${this.disabled}\n                .value=${this.displayLabel}\n                autocomplete=\"off\"\n                spellcheck=\"false\"\n                autocapitalize=\"off\"\n                readonly\n                aria-controls=\"listbox\"\n                aria-expanded=${this.open ? 'true' : 'false'}\n                aria-haspopup=\"listbox\"\n                aria-labelledby=\"label\"\n                aria-disabled=${this.disabled ? 'true' : 'false'}\n                aria-describedby=\"help-text\"\n                role=\"combobox\"\n                tabindex=\"0\"\n                @focus=${this.handleFocus}\n                @blur=${this.handleBlur}\n              />\n\n              ${this.multiple ? html`<div part=\"tags\" class=\"select__tags\">${this.tags}</div>` : ''}\n\n              <input\n                class=\"select__value-input\"\n                type=\"text\"\n                ?disabled=${this.disabled}\n                ?required=${this.required}\n                .value=${Array.isArray(this.value) ? this.value.join(', ') : this.value}\n                tabindex=\"-1\"\n                aria-hidden=\"true\"\n                @focus=${() => this.focus()}\n                @invalid=${this.handleInvalid}\n              />\n\n              ${hasClearIcon\n                ? html`\n                    <button\n                      part=\"clear-button\"\n                      class=\"select__clear\"\n                      type=\"button\"\n                      aria-label=\"clearEntry\"\n                      @mousedown=${this.handleClearMouseDown}\n                      @click=${this.handleClearClick}\n                      tabindex=\"-1\"\n                    >\n                      <slot name=\"clear-icon\">\n                        <flp-icon name=\"x-circle-fill\" library=\"system\"></flp-icon>\n                      </slot>\n                    </button>\n                  `\n                : ''}\n\n              <slot name=\"expand-icon\" part=\"expand-icon\" class=\"select__expand-icon\">\n                <flp-icon library=\"system\" name=\"chevron-down\"></flp-icon>\n              </slot>\n            </div>\n\n            <div\n              id=\"listbox\"\n              role=\"listbox\"\n              aria-expanded=${this.open ? 'true' : 'false'}\n              aria-multiselectable=${this.multiple ? 'true' : 'false'}\n              aria-labelledby=\"label\"\n              part=\"listbox\"\n              class=\"select__listbox\"\n              tabindex=\"-1\"\n              @mouseup=${this.handleOptionClick}\n              @slotchange=${this.handleDefaultSlotChange}\n            >\n              <slot></slot>\n            </div>\n          </flp-popup>\n        </div>\n\n        <div\n          part=\"form-control-help-text\"\n          id=\"help-text\"\n          class=\"form-control__help-text\"\n          aria-hidden=${hasHelpText ? 'false' : 'true'}\n        >\n          <slot name=\"help-text\">${this.helpText}</slot>\n        </div>\n      </div>\n    `;\n  }\n}\n\nsetDefaultAnimation('select.show', {\n  keyframes: [\n    { opacity: 0, scale: 0.9 },\n    { opacity: 1, scale: 1 }\n  ],\n  options: { duration: 100, easing: 'ease' }\n});\n\nsetDefaultAnimation('select.hide', {\n  keyframes: [\n    { opacity: 1, scale: 1 },\n    { opacity: 0, scale: 0.9 }\n  ],\n  options: { duration: 100, easing: 'ease' }\n});\n","import { css } from 'lit';\nimport componentStyles from '../../styles/component.styles';\n\nexport const flippico = css`\n${componentStyles}\n\n:host {\n  display: block;\n  user-select: none;\n  -webkit-user-select: none;\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n.option {\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-family: var(--flp-font-light);\n  font-size: var(--flp-font-size-medium);\n  font-weight: var(--flp-font-weight-normal);\n  line-height: var(--flp-line-height-normal);\n  letter-spacing: var(--flp-letter-spacing-normal);\n  color: var(--flp-color-neutral-700);\n  padding: var(--flp-spacing-x-small) var(--flp-spacing-medium) var(--flp-spacing-x-small) var(--flp-spacing-x-small);\n  transition: var(--flp-transition-fast) fill;\n  cursor: pointer;\n}\n\n.option--hover:not(.option--current):not(.option--disabled) {\n  background-color: var(--flp-color-neutral-100);\n  color: var(--flp-color-neutral-1000);\n}\n\n.option--current,\n.option--current.option--disabled {\n  background-color: var(--flp-color-primary-600);\n  color: var(--flp-color-neutral-0);\n  opacity: 1;\n}\n\n.option--disabled {\n  outline: none;\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.option__label {\n  flex: 1 1 auto;\n  display: inline-block;\n  line-height: var(--flp-line-height-dense);\n}\n\n.option .option__check {\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  visibility: hidden;\n  padding-inline-end: var(--flp-spacing-2x-small);\n}\n\n.option--selected .option__check {\n  visibility: visible;\n}\n\n.option__prefix,\n.option__suffix {\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n}\n\n.option__prefix::slotted(*) {\n  margin-inline-end: var(--flp-spacing-x-small);\n}\n\n.option__suffix::slotted(*) {\n  margin-inline-start: var(--flp-spacing-x-small);\n}\n\n@media (forced-colors: active) {\n  :host(:hover:not([aria-disabled='true'])) .option {\n    outline: dashed 1px SelectedItem;\n    outline-offset: -1px;\n  }\n}\n`;","import { CSSResultGroup, html } from 'lit';\nimport FlpElement from '../../utils/flippico-element';\nimport {customElement, property, query, state} from 'lit/decorators.js';\nimport './../flp-icon/flp-icon';\n\nimport { flippico } from './flp-option.styles';\nimport { watch } from '../../utils/watch';\nimport { classMap } from 'lit/directives/class-map.js';\n\n/**\n * @summary This the flp-option component\n *\n * @tag flp-option\n */\n @customElement(\"flp-option\")\nexport class FlpOption extends FlpElement {\n  static styles: CSSResultGroup = [flippico];\n\n  private cachedTextLabel: string;\n\n  @query('.option__label') defaultSlot: HTMLSlotElement;\n\n  @state() current = false; // the user has keyed into the option, but hasn't selected it yet (shows a highlight)\n  @state() selected = false; // the option is selected and has aria-selected=\"true\"\n  @state() hasHover = false; // we need this because Safari doesn't honor :hover styles while dragging\n\n  /**\n   * The option's value. When selected, the containing form control will receive this value. The value must be unique\n   * from other options in the same group. Values may not contain spaces, as spaces are used as delimiters when listing\n   * multiple values.\n   */\n  @property({ reflect: true }) value = '';\n\n  /** Draws the option in a disabled state, preventing selection. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('role', 'option');\n    this.setAttribute('aria-selected', 'false');\n  }\n\n  private handleDefaultSlotChange() {\n    const textLabel = this.getTextLabel();\n\n    // Ignore the first time the label is set\n    if (typeof this.cachedTextLabel === 'undefined') {\n      this.cachedTextLabel = textLabel;\n      return;\n    }\n\n    // When the label changes, emit a slotchange event so parent controls see it\n    if (textLabel !== this.cachedTextLabel) {\n      this.cachedTextLabel = textLabel;\n      this.emit('slotchange', { bubbles: true, composed: false, cancelable: false });\n    }\n  }\n\n  private handleMouseEnter() {\n    this.hasHover = true;\n  }\n\n  private handleMouseLeave() {\n    this.hasHover = false;\n  }\n\n  @watch('disabled')\n  handleDisabledChange() {\n    this.setAttribute('aria-disabled', this.disabled ? 'true' : 'false');\n  }\n\n  @watch('selected')\n  handleSelectedChange() {\n    this.setAttribute('aria-selected', this.selected ? 'true' : 'false');\n  }\n\n  @watch('value')\n  handleValueChange() {\n    // Ensure the value is a string. This ensures the next line doesn't error and allows framework users to pass numbers\n    // instead of requiring them to cast the value to a string.\n    if (typeof this.value !== 'string') {\n      this.value = String(this.value);\n    }\n\n    if (this.value.includes(' ')) {\n      console.error(`Option values cannot include a space. All spaces have been replaced with underscores.`, this);\n      this.value = this.value.replace(/ /g, '_');\n    }\n  }\n\n  /** Returns a plain text label based on the option's content. */\n  getTextLabel() {\n    return (this.textContent ?? '').trim();\n  }\n\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        class=${classMap({\n          option: true,\n          'option--current': this.current,\n          'option--disabled': this.disabled,\n          'option--selected': this.selected,\n          'option--hover': this.hasHover\n        })}\n        @mouseenter=${this.handleMouseEnter}\n        @mouseleave=${this.handleMouseLeave}\n      >\n        <flp-icon part=\"checked-icon\" class=\"option__check\" name=\"check\" library=\"system\" aria-hidden=\"true\"></flp-icon>\n        <slot part=\"prefix\" name=\"prefix\" class=\"option__prefix\"></slot>\n        <slot part=\"label\" class=\"option__label\" @slotchange=${this.handleDefaultSlotChange}></slot>\n        <slot part=\"suffix\" name=\"suffix\" class=\"option__suffix\"></slot>\n      </div>\n    `;\n  }\n}\n"],"names":["flippico","css","componentStyles","formControlStyles","le","i","D","t","R","ae","e","FlpSelect","FlpElement","FormControlController","HasSlotController","option","html","event","path","target","isClearButton","isIconButton","allOptions","currentIndex","newIndex","root","el","oldValue","value","values","newSelectedOptions","force","_a","_b","index","tag","unsafeHTML","stopAnimations","keyframes","options","getAnimation","animateTo","scrollIntoView","waitForEvent","message","hasLabelSlot","hasHelpTextSlot","hasLabel","hasHelpText","hasClearIcon","isPlaceholderVisible","classMap","__decorateClass","query","state","property","defaultValue","watch","customElement","setDefaultAnimation","FlpOption","textLabel"],"mappings":"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","x_google_ignoreList":[1]}