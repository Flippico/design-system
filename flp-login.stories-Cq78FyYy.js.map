{"version":3,"file":"flp-login.stories-Cq78FyYy.js","sources":["../src/components/flp-icon/index.ts","../src/components/flp-spinner/index.ts","../src/containers/flp-login/flp-login.styles.ts","../src/containers/flp-login/flp-login.ts"],"sourcesContent":["import { FlpIcon as FlpIconRaw } from './flp-icon.js';\nimport * as React from 'react';\nimport { createComponent } from '@lit/react';\n\nexport * from './flp-icon.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-icon': FlpIconRaw;\n  }\n}\n\nconst FlpIcon = createComponent({\n  tagName: 'flp-icon',\n  elementClass: FlpIconRaw,\n  react: React,\n  events: {\n  },\n  displayName: 'FlpIcon'\n});\n\nexport {\n  FlpIcon\n};","import * as React from 'react';\nimport {FlpSpinner as FlpSpinnerRaw} from './flp-spinner.js';\nimport { createComponent } from '@lit/react';\n\nexport * from './flp-spinner.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-spinner': FlpSpinnerRaw;\n  }\n}\n\nconst FlpSpinner = createComponent({\n  tagName: 'flp-spinner',\n  elementClass: FlpSpinnerRaw,\n  react: React,\n  events: {},\n  displayName: 'FlpSpinner'\n});\n\nexport {FlpSpinner};","import { css } from 'lit';\n\nexport const flippico = css`\n\n.auth-container {\n  max-width: 450px;\n  width: 100%;\n}\n.email--input {\n  margin-bottom: 20px;\n}\nflp-button {\n  width: 100%;\n}\n.mb-small {\n  margin-bottom: 10px;\n}\n.mb-medium {\n  margin-bottom: 40px;\n}\n.error {\n  color: var(--flp-color-warning-700);\n}\nh2 {\n  font-family: var(--flp-font-medium);\n}\n.text-align-center {\n  text-align: center;\n}\n.login-by-email-text {\n  margin-top: 30px;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.login-by-email-text--line {\n  height: 1px;\n  width: 30%;\n  background-color: black;\n}\n.password--and-forgot-password-link--container {\n  margin-bottom: 40px;\n}\n.password--and-forgot-password-link--container flp-button {\n  width: auto;\n}\n\n.forgot-password-link--container {\n  text-align: right;\n  --flp-spacing-medium: 0px;\n}\n`;\n\n","import { CSSResultGroup, html } from 'lit';\nimport FlpElement from '../../utils/flippico-element';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport \"./../../components/flp-card\";\nimport \"./../../components/flp-button\";\nimport \"./../../components/flp-input\";\nimport \"./../../components/flp-logo\";\nimport \"./../../components/flp-divider\";\nimport \"./../../components/flp-icon\";\nimport \"./../../components/flp-spinner\";\nimport { flippico } from './flp-login.styles';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { getApiUrl } from '../../utils/get-api-url';\n\n/**\n * @summary This the flp-login component\n *\n * @tag flp-login\n */\n @customElement(\"flp-login\")\nexport class FlpLogin extends FlpElement {\n  static styles: CSSResultGroup = [flippico];\n\n  @property({ type: String, attribute: \"tenant_key\" }) tenantKey = '';\n  @property({ type: String, attribute: \"login_callback\" }) loginCallback = '';\n  @property({ type: String, attribute: \"logout_callback\" }) logoutCallback = '';\n  @property({ type: String, attribute: \"name\" }) name = '';\n  @property({ type: Boolean, attribute: \"staging\" }) staging = false;\n  @property({ type: Boolean, attribute: \"develop\" }) develop = false;\n\n  @state() errorText: null | string;\n  @state() loginPending: boolean = false;\n\n  async loginByGoogle() {\n    console.log('login by google');\n  }\n\n  async loginByApple() {\n    console.log('login by apple');\n  }\n\n  async onSubmitHandle(event: any) {\n    event.preventDefault();\n    this.loginPending = true;\n    const formData = new FormData(event.target);\n    if (Array.from(formData.values()).some(item => item === '')) {\n      this.errorText = 'Password or email is empty';\n      this.loginPending = false;\n      return;\n    }\n    this.errorText = null;\n    fetch(`${getApiUrl(this.staging, this.develop)}/api/${formData.get('tenant_key')}/login`, {\n      method: \"POST\",\n      body: formData,\n    })\n    .then(res => res.json())\n    .then((res) => {\n      window.location.replace(`${this.loginCallback}/${res.message.token}`);\n    })\n    .catch(() => this.errorText = \"Error while send to API\")\n    .finally(() => this.loginPending = false);\n  }\n\n  render() {\n    return html`\n    <flp-card class=\"auth-container\">\n      <form @submit=${this.onSubmitHandle}>\n        <div class=\"logo-container text-align-center\">\n          <flp-logo></flp-logo>\n        </div>\n        <h2 class=\"text-align-center\">Hello again!</h2>\n        <flp-button size=\"large\" variant=\"default\" @click=${this.loginByGoogle}>\n          <flp-icon slot=\"prefix\" name=\"google\"></flp-icon>\n          Login by Google\n        </flp-button>\n        <br/>\n        <br/>\n        <flp-button size=\"large\" variant=\"default\" @click=${this.loginByApple}>\n          <flp-icon slot=\"prefix\" name=\"apple\"></flp-icon>\n          Login by Apple\n        </flp-button>\n\n        <div class=\"login-by-email-text\">\n          <div class=\"login-by-email-text--line\"></div>\n          <div class=\"text-align-center\">or login by email</div>\n          <div class=\"login-by-email-text--line\"></div>\n        </div>\n\n        <flp-input class=\"email--input\" type=\"email\" required name=\"email\" label=\"Email\"></flp-input>\n        <div class=\"password--and-forgot-password-link--container\">\n          <flp-input name=\"password\" required type=\"password\" label=\"Password\" password-toggle></flp-input>\n          <div class=\"forgot-password-link--container\">\n            <flp-button variant=\"text\" href=${`${getApiUrl(this.staging, this.develop)}/${this.tenantKey}/reset-password`}>Fogrot your password?</flp-button>\n          </div>\n        </div>\n        <input type=\"hidden\" name=\"tenant_key\" value=${this.tenantKey}/>\n        <input type=\"hidden\" name=\"login_callback\" value=${this.loginCallback} />\n        <input type=\"hidden\" name=\"logout_callback\" value=${this.logoutCallback} />\n        <flp-button \n          class=\"mb-small\" \n          size=\"large\" \n          variant=\"primary\" \n          type=\"submit\" \n          .loading=${ifDefined(this.loginPending)} \n          .disabled=${ifDefined(this.loginPending)}\n        >Login</flp-button>\n        <flp-button class=\"mb-medium\" href=${`${getApiUrl(this.staging, this.develop)}/${this.tenantKey}/signup`} variant=\"primary\" size=\"large\" outline>Create new account by email</flp-button>\n        <div class=\"error\">${this.errorText}</div>\n      </form>\n    </flp-card>`;\n  }\n}\n"],"names":["createComponent","FlpIconRaw","React","FlpSpinnerRaw","flippico","css","FlpLogin","FlpElement","event","formData","item","getApiUrl","res","html","ifDefined","__decorateClass","property","state","customElement"],"mappings":"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"}