{"version":3,"file":"flp-confirm-signup.stories-DYBYNRdL.js","sources":["../src/containers/flp-confirm-signup/flp-confirm-signup.styles.ts","../src/containers/flp-confirm-signup/flp-confirm-signup.ts"],"sourcesContent":["import { css } from 'lit';\n\nexport const flippico = css`\nflp-button {\n  width: 100%;\n}\n.error {\n  color: var(--flp-color-warning-700);\n}\nh2 {\n  font-family: var(--flp-font-medium);\n}\n.auth-container {\n  max-width: 450px;\n  width: 100%;\n}\n.mb-small {\n  margin-bottom: 20px;\n}\n.mb-medium {\n  margin-bottom: 40px;\n}\n.text-align-center {\n  text-align: center;\n}\n.forgot-password-link--container {\n  text-align: right;\n  --flp-spacing-medium: 0px;\n}\n.login--button {\n  width: auto;\n}\n.login-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n`;","import { CSSResultGroup, html } from 'lit';\nimport FlpElement from '../../utils/flippico-element';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { flippico } from './flp-confirm-signup.styles';\nimport { getApiUrl } from '../../utils/get-api-url';\n\n/**\n * @summary This the flp-confirm-signup component\n *\n * @tag flp-confirm-signup\n */\n @customElement(\"flp-confirm-signup\")\nexport class FlpConfirmSignup extends FlpElement {\n  static styles: CSSResultGroup = [flippico];\n\n  @property({ type: String, attribute: \"tenant_key\" }) tenantKey = '';\n  @property({ type: String, attribute: \"token\" }) token = '';\n  @property({ type: String, attribute: \"success_confirm_url\" }) successConfirmUrl = '';\n  @property({ type: Boolean, attribute: \"staging\" }) staging = false;\n  @property({ type: Boolean, attribute: \"develop\" }) develop = false;\n\n  @state() errorText: null | string;\n  @state() loginPending = false;\n\n  onSubmitHandle(event: any) {\n    event.preventDefault();\n    this.loginPending = true;\n    const formData = new FormData(event.target);\n    if (Array.from(formData.values()).some(item => item === '')) {\n      this.loginPending = false;\n      return;\n    }\n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"code\", formData.get(\"code\") as string);\n    urlencoded.append(\"token\", this.token);\n    fetch(`${getApiUrl(this.staging, this.develop)}/api/${this.tenantKey}/confirm-account`, {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    })\n    .then(res => res.json())\n    .then((response) => {\n      console.log('response', response);\n      if (response.code <= 4000) {\n        window.location.href = this.successConfirmUrl;\n        return;\n      }\n      this.errorText = response.message.error;\n      event.target.reset();\n    })\n    .finally(() => this.loginPending = false);\n  }\n\n  render() {\n    return html`<flp-card class=\"auth-container\">\n      <form @submit=${this.onSubmitHandle}>\n        <div class=\"logo-container text-align-center\">\n          <flp-logo></flp-logo>\n        </div>\n        <h2 class=\"text-align-center\">Confirm your account</h2>\n        <flp-input class=\"mb-small\" type=\"number\" required min=\"1000\" max=\"9000\" name=\"code\" label=\"Code\"></flp-input>\n        <flp-button \n          class=\"mb-small\" \n          size=\"large\" \n          variant=\"primary\" \n          type=\"submit\" \n          .loading=${ifDefined(this.loginPending)} \n          .disabled=${ifDefined(this.loginPending)}\n        >Confirm</flp-button>\n        <div class=\"error\">${this.errorText}</div>\n      </form>\n    </flp-card>`;\n  }\n}\n"],"names":["flippico","css","FlpConfirmSignup","FlpElement","event","formData","item","urlencoded","getApiUrl","res","response","html","ifDefined","__decorateClass","property","state","customElement"],"mappings":"sTAEO,MAAMA,EAAWC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kMCWX,IAAAC,EAAN,cAA+BC,CAAW,CAA1C,aAAA,CAAA,MAAA,GAAA,SAAA,EAG4D,KAAA,UAAA,GACT,KAAA,MAAA,GAC0B,KAAA,kBAAA,GACrB,KAAA,QAAA,GACA,KAAA,QAAA,GAGrC,KAAA,aAAA,EAAA,CAExB,eAAeC,EAAY,CACzBA,EAAM,eAAe,EACrB,KAAK,aAAe,GACpB,MAAMC,EAAW,IAAI,SAASD,EAAM,MAAM,EACtC,GAAA,MAAM,KAAKC,EAAS,OAAQ,CAAA,EAAE,KAAKC,GAAQA,IAAS,EAAE,EAAG,CAC3D,KAAK,aAAe,GACpB,MACF,CACM,MAAAC,EAAa,IAAI,gBACvBA,EAAW,OAAO,OAAQF,EAAS,IAAI,MAAM,CAAW,EAC7CE,EAAA,OAAO,QAAS,KAAK,KAAK,EAC/B,MAAA,GAAGC,EAAU,KAAK,QAAS,KAAK,OAAO,CAAC,QAAQ,KAAK,SAAS,mBAAoB,CACtF,OAAQ,OACR,KAAMH,EACN,QAAS,CACP,eAAgB,mCAClB,CAAA,CACD,EACA,KAAYI,GAAAA,EAAI,MAAM,EACtB,KAAMC,GAAa,CAEd,GADI,QAAA,IAAI,WAAYA,CAAQ,EAC5BA,EAAS,MAAQ,IAAM,CAClB,OAAA,SAAS,KAAO,KAAK,kBAC5B,MACF,CACK,KAAA,UAAYA,EAAS,QAAQ,MAClCN,EAAM,OAAO,OACd,CAAA,EACA,QAAQ,IAAM,KAAK,aAAe,EAAK,CAC1C,CAEA,QAAS,CACA,OAAAO;AAAAA,sBACW,KAAK,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAWpBC,EAAU,KAAK,YAAY,CAAC;AAAA,sBAC3BA,EAAU,KAAK,YAAY,CAAC;AAAA;AAAA,6BAErB,KAAK,SAAS;AAAA;AAAA,gBAGzC,CACF,EA/DaV,EACJ,OAAyB,CAACF,CAAQ,EAEYa,EAAA,CAApDC,EAAS,CAAE,KAAM,OAAQ,UAAW,aAAc,CAAA,EAHxCZ,EAG0C,UAAA,YAAA,CAAA,EACLW,EAAA,CAA/CC,EAAS,CAAE,KAAM,OAAQ,UAAW,QAAS,CAAA,EAJnCZ,EAIqC,UAAA,QAAA,CAAA,EACcW,EAAA,CAA7DC,EAAS,CAAE,KAAM,OAAQ,UAAW,sBAAuB,CAAA,EALjDZ,EAKmD,UAAA,oBAAA,CAAA,EACXW,EAAA,CAAlDC,EAAS,CAAE,KAAM,QAAS,UAAW,UAAW,CAAA,EANtCZ,EAMwC,UAAA,UAAA,CAAA,EACAW,EAAA,CAAlDC,EAAS,CAAE,KAAM,QAAS,UAAW,UAAW,CAAA,EAPtCZ,EAOwC,UAAA,UAAA,CAAA,EAE1CW,EAAA,CAARE,EAAM,CAAA,EATIb,EASF,UAAA,YAAA,CAAA,EACAW,EAAA,CAARE,EAAM,CAAA,EAVIb,EAUF,UAAA,eAAA,CAAA,EAVEA,EAANW,EAAA,CADLG,EAAc,oBAAoB,CAAA,EACvBd,CAAA;;;;;;;;;;;;;;;;;;"}