{"version":3,"file":"flp-checkbox.stories-0RCEGKg_.js","sources":["../src/components/flp-checkbox/flp-checkbox.styles.ts","../src/components/flp-checkbox/flp-checkbox.ts"],"sourcesContent":["import { css } from 'lit';\nimport componentStyles from '../../styles/component.styles';\n\nexport const flippico = css`\n${componentStyles}\n\n:host {\n  display: inline-block;\n}\n\n.checkbox {\n  position: relative;\n  display: inline-flex;\n  align-items: flex-start;\n  font-family: var(--flp-input-font-family);\n  font-weight: var(--flp-input-font-weight);\n  color: var(--flp-input-label-color);\n  vertical-align: middle;\n  cursor: pointer;\n}\n\n.checkbox--small {\n  --toggle-size: var(--flp-toggle-size-small);\n  font-size: var(--flp-input-font-size-small);\n}\n\n.checkbox--medium {\n  --toggle-size: var(--flp-toggle-size-medium);\n  font-size: var(--flp-input-font-size-medium);\n}\n\n.checkbox--large {\n  --toggle-size: var(--flp-toggle-size-large);\n  font-size: var(--flp-input-font-size-large);\n}\n\n.checkbox__control {\n  flex: 0 0 auto;\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: var(--toggle-size);\n  height: var(--toggle-size);\n  border: solid var(--flp-input-border-width) var(--flp-input-border-color);\n  border-radius: 2px;\n  background-color: var(--flp-input-background-color);\n  color: var(--flp-color-neutral-0);\n  transition:\n    var(--flp-transition-fast) border-color,\n    var(--flp-transition-fast) background-color,\n    var(--flp-transition-fast) color,\n    var(--flp-transition-fast) box-shadow;\n}\n\n.checkbox__input {\n  position: absolute;\n  opacity: 0;\n  padding: 0;\n  margin: 0;\n  pointer-events: none;\n}\n\n.checkbox__checked-icon,\n.checkbox__indeterminate-icon {\n  display: inline-flex;\n  width: var(--toggle-size);\n  height: var(--toggle-size);\n}\n\n/* Hover */\n.checkbox:not(.checkbox--checked):not(.checkbox--disabled) .checkbox__control:hover {\n  border-color: var(--flp-input-border-color-hover);\n  background-color: var(--flp-input-background-color-hover);\n}\n\n/* Focus */\n.checkbox:not(.checkbox--checked):not(.checkbox--disabled) .checkbox__input:focus-visible ~ .checkbox__control {\n  outline: var(--flp-focus-ring);\n  outline-offset: var(--flp-focus-ring-offset);\n}\n\n/* Checked/indeterminate */\n.checkbox--checked .checkbox__control,\n.checkbox--indeterminate .checkbox__control {\n  border-color: var(--flp-color-primary-600);\n  background-color: var(--flp-color-primary-600);\n}\n\n/* Checked/indeterminate + hover */\n.checkbox.checkbox--checked:not(.checkbox--disabled) .checkbox__control:hover,\n.checkbox.checkbox--indeterminate:not(.checkbox--disabled) .checkbox__control:hover {\n  border-color: var(--flp-color-primary-500);\n  background-color: var(--flp-color-primary-500);\n}\n\n/* Checked/indeterminate + focus */\n.checkbox.checkbox--checked:not(.checkbox--disabled) .checkbox__input:focus-visible ~ .checkbox__control,\n.checkbox.checkbox--indeterminate:not(.checkbox--disabled) .checkbox__input:focus-visible ~ .checkbox__control {\n  outline: var(--flp-focus-ring);\n  outline-offset: var(--flp-focus-ring-offset);\n}\n\n/* Disabled */\n.checkbox--disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.checkbox__label {\n  display: inline-block;\n  color: var(--flp-input-label-color);\n  line-height: var(--toggle-size);\n  margin-inline-start: 0.5em;\n  user-select: none;\n  -webkit-user-select: none;\n}\n\n:host([required]) .checkbox__label::after {\n  content: var(--flp-input-required-content);\n  margin-inline-start: var(--flp-input-required-content-offset);\n}\n`;","import { CSSResultGroup, html } from 'lit';\nimport FlpElement, { FlpFormControl } from '../../utils/flippico-element';\nimport {customElement, property, query, state} from 'lit/decorators.js';\n\nimport { flippico } from './flp-checkbox.styles';\nimport { FormControlController } from '../../utils/form';\nimport { defaultValue } from '../../utils/default-value';\nimport { watch } from '../../utils/watch';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\n/**\n * @summary This the flp-checkbox component\n *\n * @tag flp-checkbox\n */\n @customElement(\"flp-checkbox\")\nexport class FlpCheckbox extends FlpElement implements FlpFormControl {\n  static styles: CSSResultGroup = [flippico];\n\n  private readonly formControlController = new FormControlController(this, {\n    value: (control: any) => (control.checked ? control.value || 'on' : undefined),\n    defaultValue: (control: any) => control.defaultChecked,\n    setValue: (control: any, checked: any) => (control.checked = checked)\n  });\n\n  @query('input[type=\"checkbox\"]') input: HTMLInputElement;\n\n  @state() private hasFocus = false;\n\n  @property() title = ''; // make reactive to pass through\n\n  /** The name of the checkbox, submitted as a name/value pair with form data. */\n  @property() name = '';\n\n  /** The current value of the checkbox, submitted as a name/value pair with form data. */\n  @property() value: string;\n\n  /** The checkbox's size. */\n  @property({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** Disables the checkbox. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /** Draws the checkbox in a checked state. */\n  @property({ type: Boolean, reflect: true }) checked = false;\n\n  /**\n   * Draws the checkbox in an indeterminate state. This is usually applied to checkboxes that represents a \"select\n   * all/none\" behavior when associated checkboxes have a mix of checked and unchecked states.\n   */\n  @property({ type: Boolean, reflect: true }) indeterminate = false;\n\n  /** The default value of the form control. Primarily used for resetting the form control. */\n  @defaultValue('checked') defaultChecked = false;\n\n  /**\n   * By default, form controls are associated with the nearest containing `<form>` element. This attribute allows you\n   * to place the form control outside of a form and associate it with the form that has this `id`. The form must be in\n   * the same document or shadow root for this to work.\n   */\n  @property({ reflect: true }) form = '';\n\n  /** Makes the checkbox a required field. */\n  @property({ type: Boolean, reflect: true }) required = false;\n\n  /** Gets the validity state object */\n  get validity() {\n    return this.input.validity;\n  }\n\n  /** Gets the validation message */\n  get validationMessage() {\n    return this.input.validationMessage;\n  }\n\n  firstUpdated() {\n    this.formControlController.updateValidity();\n  }\n\n  private handleClick() {\n    this.checked = !this.checked;\n    this.indeterminate = false;\n    this.emit('flp-change');\n  }\n\n  private handleBlur() {\n    this.hasFocus = false;\n    this.emit('flp-blur');\n  }\n\n  private handleInput() {\n    this.emit('flp-input');\n  }\n\n  private handleInvalid(event: Event) {\n    this.formControlController.setValidity(false);\n    this.formControlController.emitInvalidEvent(event);\n  }\n\n  private handleFocus() {\n    this.hasFocus = true;\n    this.emit('flp-focus');\n  }\n\n  @watch('disabled', { waitUntilFirstUpdate: true })\n  handleDisabledChange() {\n    // Disabled form controls are always valid\n    this.formControlController.setValidity(this.disabled);\n  }\n\n  @watch(['checked', 'indeterminate'], { waitUntilFirstUpdate: true })\n  handleStateChange() {\n    this.input.checked = this.checked; // force a sync update\n    this.input.indeterminate = this.indeterminate; // force a sync update\n    this.formControlController.updateValidity();\n  }\n\n  /** Simulates a click on the checkbox. */\n  click() {\n    this.input.click();\n  }\n\n  /** Sets focus on the checkbox. */\n  focus(options?: FocusOptions) {\n    this.input.focus(options);\n  }\n\n  /** Removes focus from the checkbox. */\n  blur() {\n    this.input.blur();\n  }\n\n  /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */\n  checkValidity() {\n    return this.input.checkValidity();\n  }\n\n  /** Gets the associated form, if one exists. */\n  getForm(): HTMLFormElement | null {\n    return this.formControlController.getForm();\n  }\n\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  reportValidity() {\n    return this.input.reportValidity();\n  }\n\n  /**\n   * Sets a custom validation message. The value provided will be shown to the user when the form is submitted. To clear\n   * the custom validation message, call this method with an empty string.\n   */\n  setCustomValidity(message: string) {\n    this.input.setCustomValidity(message);\n    this.formControlController.updateValidity();\n  }\n\n  render() {\n    //\n    // NOTE: we use a <div> around the label slot because of this Chrome bug.\n    //\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1413733\n    //\n    return html`\n      <label\n        part=\"base\"\n        class=${classMap({\n          checkbox: true,\n          'checkbox--checked': this.checked,\n          'checkbox--disabled': this.disabled,\n          'checkbox--focused': this.hasFocus,\n          'checkbox--indeterminate': this.indeterminate,\n          'checkbox--small': this.size === 'small',\n          'checkbox--medium': this.size === 'medium',\n          'checkbox--large': this.size === 'large'\n        })}\n      >\n        <input\n          class=\"checkbox__input\"\n          type=\"checkbox\"\n          title=${this.title /* An empty title prevents browser validation tooltips from appearing on hover */}\n          name=${this.name}\n          value=${ifDefined(this.value)}\n          .indeterminate=${live(this.indeterminate)}\n          .checked=${live(this.checked)}\n          .disabled=${this.disabled}\n          .required=${this.required}\n          aria-checked=${this.checked ? 'true' : 'false'}\n          @click=${this.handleClick}\n          @input=${this.handleInput}\n          @invalid=${this.handleInvalid}\n          @blur=${this.handleBlur}\n          @focus=${this.handleFocus}\n        />\n\n        <span\n          part=\"control${this.checked ? ' control--checked' : ''}${this.indeterminate ? ' control--indeterminate' : ''}\"\n          class=\"checkbox__control\"\n        >\n          ${this.checked\n            ? html`\n                <flp-icon part=\"checked-icon\" class=\"checkbox__checked-icon\" library=\"system\" name=\"check\"></flp-icon>\n              `\n            : ''}\n          ${!this.checked && this.indeterminate\n            ? html`\n                <flp-icon\n                  part=\"indeterminate-icon\"\n                  class=\"checkbox__indeterminate-icon\"\n                  library=\"system\"\n                  name=\"indeterminate\"\n                ></flp-icon>\n              `\n            : ''}\n        </span>\n\n        <div part=\"label\" class=\"checkbox__label\">\n          <slot></slot>\n        </div>\n      </label>\n    `;\n  }\n}\n"],"names":["flippico","css","componentStyles","FlpCheckbox","FlpElement","FormControlController","control","checked","event","options","message","html","classMap","ifDefined","live","__decorateClass","query","state","property","defaultValue","watch","customElement"],"mappings":"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"}