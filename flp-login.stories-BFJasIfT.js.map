{"version":3,"file":"flp-login.stories-BFJasIfT.js","sources":["../node_modules/@lit/react/create-component.js","../src/components/flp-card/index.ts","../src/components/flp-button/index.ts","../src/components/flp-input/index.ts","../src/components/flp-logo/index.ts","../src/components/flp-divider/index.ts","../src/components/flp-icon/index.ts","../src/components/flp-checkbox/index.ts","../src/components/flp-spinner/index.ts","../src/containers/flp-login/flp-login.styles.ts","../src/containers/flp-login/flp-login.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst e=new Set([\"children\",\"localName\",\"ref\",\"style\",\"className\"]),n=new WeakMap,t=(e,t,l,o,a)=>{const s=a?.[t];void 0===s||l===o?(e[t]=l,null==l&&t in HTMLElement.prototype&&e.removeAttribute(t)):((e,t,l)=>{let o=n.get(e);void 0===o&&n.set(e,o=new Map);let a=o.get(t);void 0!==l?void 0===a?(o.set(t,a={handleEvent:l}),e.addEventListener(t,a)):a.handleEvent=l:void 0!==a&&(o.delete(t),e.removeEventListener(t,a))})(e,s,l)},l=({react:n,tagName:l,elementClass:o,events:a,displayName:s})=>{const c=new Set(Object.keys(a??{})),i=n.forwardRef(((s,i)=>{const r=n.useRef(null),d=n.useRef(null),f={},u={};for(const[n,t]of Object.entries(s))e.has(n)?f[\"className\"===n?\"class\":n]=t:c.has(n)||n in o.prototype?u[n]=t:f[n]=t;return n.useLayoutEffect((()=>{if(null!==d.current){for(const e in u)t(d.current,e,s[e],r.current?r.current[e]:void 0,a);r.current=s}})),n.useLayoutEffect((()=>{d.current?.removeAttribute(\"defer-hydration\")}),[]),f.suppressHydrationWarning=!0,n.createElement(l,{...f,ref:e=>{d.current=e,\"function\"==typeof i?i(e):null!==i&&(i.current=e)}})}));return i.displayName=s??o.name,i};export{l as createComponent};\n//# sourceMappingURL=create-component.js.map\n","import { FlpCard as FlpCardRaw } from './flp-card.js';\nimport * as React from 'react';\nimport { createComponent } from '@lit/react';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-card': FlpCardRaw;\n  }\n}\n\nconst FlpCard = createComponent({\n  tagName: 'flp-card',\n  elementClass: FlpCardRaw,\n  react: React,\n  events: {\n  },\n  displayName: 'FlpCard'\n});\n\nexport {\n  FlpCard\n};","import * as React from 'react';\nimport { FlpButton as FlpButtonRaw } from './flp-button.js';\nimport { EventName, createComponent } from '@lit/react';\nimport type { FlpBlurEvent, FlpFocusEvent, FlpInvalidEvent } from '../../events/index.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-button': FlpButtonRaw;\n  }\n}\n\nconst FlpButton = createComponent({\n  tagName: 'flp-button',\n  elementClass: FlpButtonRaw,\n  react: React,\n  events: {\n    onFlpBlur: 'flp-blur' as EventName<FlpBlurEvent>,\n    onFlpFocus: 'flp-focus' as EventName<FlpFocusEvent>,\n    onFlpInvalid: 'flp-invalid' as EventName<FlpInvalidEvent>\n  },\n  displayName: 'FlpButton'\n});\n\nexport { \n  FlpButton\n};","import { FlpInput as FlpInputRaw } from './flp-input.js';\nimport * as React from 'react';\nimport { EventName, createComponent } from '@lit/react';\nimport { FlpBlurEvent, FlpChangeEvent, FlpClearEvent, FlpFocusEvent, FlpInputEvent } from '../../events/index.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-input': FlpInputRaw;\n  }\n}\n\nconst FlpInput = createComponent({\n  tagName: 'flp-input',\n  elementClass: FlpInputRaw,\n  react: React,\n  events: {\n    onFlpClear: 'flp-clear' as EventName<FlpClearEvent>,\n    onFlpInput: 'flp-input' as EventName<FlpInputEvent>,\n    onFlpChange: 'flp-change' as EventName<FlpChangeEvent>,\n    onFlpBlur: 'flp-blur' as EventName<FlpBlurEvent>,\n    onFlpFocus: 'flp-focus' as EventName<FlpFocusEvent>,\n  },\n  displayName: 'FlpInput'\n});\n\nexport { FlpInput };","import { FlpLogo as FlpLogoRaw } from './flp-logo.js';\nimport * as React from 'react';\nimport { createComponent } from '@lit/react';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-logo': FlpLogoRaw;\n  }\n}\n\nconst FlpLogo = createComponent({\n  tagName: 'flp-logo',\n  elementClass: FlpLogoRaw,\n  react: React,\n  events: {\n  },\n  displayName: 'FlpLogo'\n});\n\nexport {\n  FlpLogo\n};","import { FlpDivider as FlpDividerRaw } from './flp-divider.js';\nimport * as React from 'react';\nimport { createComponent } from '@lit/react';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-divider': FlpDividerRaw;\n  }\n}\n\nconst FlpDivider = createComponent({\n  tagName: 'flp-divider',\n  elementClass: FlpDividerRaw,\n  react: React,\n  events: {\n  },\n  displayName: 'FlpDivider'\n});\n\nexport {\n  FlpDivider\n};","import { FlpIcon as FlpIconRaw } from './flp-icon.js';\nimport * as React from 'react';\nimport { createComponent } from '@lit/react';\n\nexport * from './flp-icon.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-icon': FlpIconRaw;\n  }\n}\n\nconst FlpIcon = createComponent({\n  tagName: 'flp-icon',\n  elementClass: FlpIconRaw,\n  react: React,\n  events: {\n  },\n  displayName: 'FlpIcon'\n});\n\nexport {\n  FlpIcon\n};","import { FlpCheckbox as FlpCheckboxRaw } from './flp-checkbox.js';\nimport * as React from 'react';\nimport { EventName, createComponent } from '@lit/react';\nimport { FlpBlurEvent, FlpChangeEvent, FlpFocusEvent, FlpInputEvent, FlpInvalidEvent } from '../../events/index.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-checkbox': FlpCheckboxRaw;\n  }\n}\n\nconst FlpCheckbox = createComponent({\n  tagName: 'flp-checkbox',\n  elementClass: FlpCheckboxRaw,\n  react: React,\n  events: {\n    onFlpBlur: 'flp-blur' as EventName<FlpBlurEvent>,\n    onFlpChange: 'flp-change' as EventName<FlpChangeEvent>,\n    onFlpFocus: 'flp-focus' as EventName<FlpFocusEvent>,\n    onFlpInput: 'flp-input' as EventName<FlpInputEvent>,\n    onFlpInvalid: 'flp-invalid' as EventName<FlpInvalidEvent>\n  },\n  displayName: 'FlpCheckbox'\n});\n\nexport {\n  FlpCheckbox\n};","import * as React from 'react';\nimport {FlpSpinner as FlpSpinnerRaw} from './flp-spinner.js';\nimport { createComponent } from '@lit/react';\n\nexport * from './flp-spinner.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-spinner': FlpSpinnerRaw;\n  }\n}\n\nconst FlpSpinner = createComponent({\n  tagName: 'flp-spinner',\n  elementClass: FlpSpinnerRaw,\n  react: React,\n  events: {},\n  displayName: 'FlpSpinner'\n});\n\nexport {FlpSpinner};","import { css } from 'lit';\n\nexport const flippico = css`\n\n.auth-container {\n  max-width: 450px;\n  width: 100%;\n}\n.email--input {\n  margin-bottom: 20px;\n}\nflp-button {\n  width: 100%;\n}\n.mb-small {\n  margin-bottom: 10px;\n}\n.mb-medium {\n  margin-bottom: 40px;\n}\n.error {\n  color: var(--flp-color-warning-700);\n}\nh2 {\n  font-family: var(--flp-font-medium);\n}\n.text-align-center {\n  text-align: center;\n}\n.login-by-email-text {\n  margin-top: 30px;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.login-by-email-text--line {\n  height: 1px;\n  width: 30%;\n  background-color: black;\n}\n.password--and-forgot-password-link--container {\n  margin-bottom: 40px;\n}\n.password--and-forgot-password-link--container flp-button {\n  width: auto;\n}\n\n.forgot-password-link--container {\n  text-align: right;\n  --flp-spacing-medium: 0px;\n}\n`;\n\n","import { CSSResultGroup, html } from 'lit';\nimport FlpElement from '../../utils/flippico-element';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport \"./../../components/flp-card\";\nimport \"./../../components/flp-button\";\nimport \"./../../components/flp-input\";\nimport \"./../../components/flp-logo\";\nimport \"./../../components/flp-divider\";\nimport \"./../../components/flp-icon\";\nimport \"./../../components/flp-checkbox\";\nimport \"./../../components/flp-spinner\";\nimport { flippico } from './flp-login.styles';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\n/**\n * @summary This the flp-login component\n *\n * @tag flp-login\n */\n @customElement(\"flp-login\")\nexport class FlpLogin extends FlpElement {\n  static styles: CSSResultGroup = [flippico];\n\n  @property({ type: String, attribute: \"tenant_key\" }) tenantKey = '';\n  @property({ type: String, attribute: \"login_callback\" }) loginCallback = '';\n  @property({ type: String, attribute: \"logout_callback\" }) logoutCallback = '';\n  @property({ type: String, attribute: \"name\" }) name = '';\n  @property({ type: Boolean, attribute: \"staging\" }) staging = false;\n\n  @state() errorText: null | string;\n  @state() loginPending: boolean = false;\n\n  baseUrl = this.staging ? \"https://staging.amadeus.flippi.co\" : \"https://amadeus.flippi.co\";\n\n  async loginByGoogle() {\n    console.log('login by google');\n  }\n\n  async loginByApple() {\n    console.log('login by apple');\n  }\n\n  async onSubmitHandle(event: any) {\n    event.preventDefault();\n    this.loginPending = true;\n    const formData = new FormData(event.target);\n    if (Array.from(formData.values()).some(item => item === '')) {\n      this.errorText = 'Password or email is empty';\n      this.loginPending = false;\n      return;\n    }\n    \n    console.log('email', formData.get('email'));\n    console.log('password', formData.get('password'));\n    console.log('tenant-key', formData.get('tenant-key'));\n    console.log('login-callback', formData.get('login-callback'));\n    console.log('logout-callback', formData.get('logout-callback'));\n    this.errorText = null;\n    fetch(`${this.baseUrl}/${formData.get('tenant-key')}/login`, {\n      method: \"POST\",\n      body: formData,\n    })\n    .then(res => res.json())\n    .then((res) => {\n      window.location.replace(`${this.loginCallback}/${res.message.token}`);\n    })\n    .catch(() => this.errorText = \"Error while send to API\")\n    .finally(() => this.loginPending = false);\n  }\n\n  render() {\n    return html`\n    <flp-card class=\"auth-container\">\n      <form @submit=${this.onSubmitHandle}>\n        <div class=\"logo-container text-align-center\">\n          <flp-logo></flp-logo>\n        </div>\n        <h2 class=\"text-align-center\">Hello again!</h2>\n        <flp-button size=\"large\" variant=\"default\" @click=${this.loginByGoogle}>\n          <flp-icon slot=\"prefix\" name=\"google\"></flp-icon>\n          Login by Google\n        </flp-button>\n        <br/>\n        <br/>\n        <flp-button size=\"large\" variant=\"default\" @click=${this.loginByApple}>\n          <flp-icon slot=\"prefix\" name=\"apple\"></flp-icon>\n          Login by Apple\n        </flp-button>\n\n        <div class=\"login-by-email-text\">\n          <div class=\"login-by-email-text--line\"></div>\n          <div class=\"text-align-center\">or login by email</div>\n          <div class=\"login-by-email-text--line\"></div>\n        </div>\n\n        <flp-input class=\"email--input\" type=\"email\" required name=\"email\" label=\"Email\"></flp-input>\n        <div class=\"password--and-forgot-password-link--container\">\n          <flp-input name=\"password\" error=\"sds\" required type=\"password\" label=\"Password\" password-toggle></flp-input>\n          <div class=\"forgot-password-link--container\">\n            <flp-button variant=\"text\" href=${`${this.baseUrl}/${this.tenantKey}/reset-password`}>Fogrot your password?</flp-button>\n          </div>\n        </div>\n        <input type=\"hidden\" name=\"tenant-key\" value=${this.tenantKey}/>\n        <input type=\"hidden\" name=\"login-callback\" value=${this.loginCallback} />\n        <input type=\"hidden\" name=\"logout-callback\" value=${this.logoutCallback} />\n        <flp-button \n          class=\"mb-small\" \n          size=\"large\" \n          variant=\"primary\" \n          type=\"submit\" \n          .loading=${ifDefined(this.loginPending)} \n          .disabled=${ifDefined(this.loginPending)}\n        >Login</flp-button>\n        <flp-button class=\"mb-medium\" href=${`${this.baseUrl}/${this.tenantKey}/signup`} variant=\"primary\" size=\"large\" outline>Create new account by email</flp-button>\n        <div class=\"error\">${this.errorText}</div>\n      </form>\n    </flp-card>`;\n  }\n}\n"],"names":["e","n","t","l","o","a","s","c","i","r","d","f","u","_a","createComponent","FlpCardRaw","React","FlpButtonRaw","FlpInputRaw","FlpLogoRaw","FlpDividerRaw","FlpIconRaw","FlpCheckboxRaw","FlpSpinnerRaw","flippico","css","FlpLogin","FlpElement","event","formData","item","res","html","ifDefined","__decorateClass","property","state","customElement"],"mappings":"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","x_google_ignoreList":[0]}