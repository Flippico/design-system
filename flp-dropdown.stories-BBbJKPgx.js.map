{"version":3,"file":"flp-dropdown.stories-BBbJKPgx.js","sources":["../src/components/flp-dropdown/flp-dropdown.styles.ts","../src/components/flp-dropdown/flp-dropdown.ts"],"sourcesContent":["import { css } from 'lit';\nimport componentStyles from '../../styles/component.styles';\n\nexport const flippico = css`\n${componentStyles}\n\n:host {\n  display: inline-block;\n}\n\n.dropdown::part(popup) {\n  z-index: var(--flp-z-index-dropdown);\n}\n\n.dropdown[data-current-placement^='top']::part(popup) {\n  transform-origin: bottom;\n}\n\n.dropdown[data-current-placement^='bottom']::part(popup) {\n  transform-origin: top;\n}\n\n.dropdown[data-current-placement^='left']::part(popup) {\n  transform-origin: right;\n}\n\n.dropdown[data-current-placement^='right']::part(popup) {\n  transform-origin: left;\n}\n\n.dropdown__trigger {\n  display: block;\n}\n\n.dropdown__panel {\n  font-family: var(--flp-font-light);\n  font-size: var(--flp-font-size-medium);\n  font-weight: var(--flp-font-weight-normal);\n  box-shadow: var(--flp-shadow-large);\n  border-radius: var(--flp-border-radius-medium);\n  pointer-events: none;\n}\n\n.dropdown--open .dropdown__panel {\n  display: block;\n  pointer-events: all;\n}\n\n/* When users slot a menu, make sure it conforms to the popup's auto-size */\n::slotted(sl-menu) {\n  max-width: var(--auto-size-available-width) !important;\n  max-height: var(--auto-size-available-height) !important;\n}\n`;","import { CSSResultGroup, html } from 'lit';\nimport FlpElement from '../../utils/flippico-element';\nimport {customElement, property, query} from 'lit/decorators.js';\n\nimport { flippico } from './flp-dropdown.styles';\nimport { waitForEvent } from '../../utils/event';\nimport { getTabbableBoundary } from '../../utils/tabbable';\nimport { animateTo, stopAnimations } from '../../utils/animate';\nimport { getAnimation, setDefaultAnimation } from '../../utils/animation-registry';\nimport { FlpSelectEvent } from '../../events';\nimport type { FlpButton } from '../flp-button/flp-button';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { watch } from '../../utils/watch';\nimport type { FlpPopup } from '../flp-popup/flp-popup';\nimport type { FlpMenu } from '../flp-menu/flp-menu';\nimport type { FlpIconButton } from '../flp-icon-button/flp-icon-button';\n\n/**\n * @summary This the flp-dropdown component\n *\n * @tag flp-dropdown\n */\n @customElement(\"flp-dropdown\")\nexport class FlpDropdown extends FlpElement {\n  static styles: CSSResultGroup = [flippico];\n\n  @query('.dropdown') popup: FlpPopup;\n  @query('.dropdown__trigger') trigger: HTMLSlotElement;\n  @query('.dropdown__panel') panel: HTMLSlotElement;\n\n  /**\n   * Indicates whether or not the dropdown is open. You can toggle this attribute to show and hide the dropdown, or you\n   * can use the `show()` and `hide()` methods and this attribute will reflect the dropdown's open state.\n   */\n  @property({ type: Boolean, reflect: true }) open = false;\n\n  /**\n   * The preferred placement of the dropdown panel. Note that the actual placement may vary as needed to keep the panel\n   * inside of the viewport.\n   */\n  @property({ reflect: true }) placement:\n    | 'top'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'right'\n    | 'right-start'\n    | 'right-end'\n    | 'left'\n    | 'left-start'\n    | 'left-end' = 'bottom-start';\n\n  /** Disables the dropdown so the panel will not open. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /**\n   * By default, the dropdown is closed when an item is selected. This attribute will keep it open instead. Useful for\n   * dropdowns that allow for multiple interactions.\n   */\n  @property({ attribute: 'stay-open-on-select', type: Boolean, reflect: true }) stayOpenOnSelect = false;\n\n  /**\n   * The dropdown will close when the user interacts outside of this element (e.g. clicking). Useful for composing other\n   * components that use a dropdown internally.\n   */\n  @property({ attribute: false }) containingElement?: HTMLElement;\n\n  /** The distance in pixels from which to offset the panel away from its trigger. */\n  @property({ type: Number }) distance = 0;\n\n  /** The distance in pixels from which to offset the panel along its trigger. */\n  @property({ type: Number }) skidding = 0;\n\n  /**\n   * Enable this option to prevent the panel from being clipped when the component is placed inside a container with\n   * `overflow: auto|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all, scenarios.\n   */\n  @property({ type: Boolean }) hoist = false;\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.containingElement) {\n      this.containingElement = this;\n    }\n  }\n\n  firstUpdated() {\n    this.panel.hidden = !this.open;\n\n    // If the dropdown is visible on init, update its position\n    if (this.open) {\n      this.addOpenListeners();\n      this.popup.active = true;\n    }\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.removeOpenListeners();\n    this.hide();\n  }\n\n  focusOnTrigger() {\n    const trigger = this.trigger.assignedElements({ flatten: true })[0] as HTMLElement | undefined;\n    if (typeof trigger?.focus === 'function') {\n      trigger.focus();\n    }\n  }\n\n  getMenu() {\n    return this.panel.assignedElements({ flatten: true }).find(el => el.tagName.toLowerCase() === 'flp-menu') as\n      | FlpMenu\n      | undefined;\n  }\n\n  private handleKeyDown = (event: KeyboardEvent) => {\n    // Close when escape is pressed inside an open dropdown. We need to listen on the panel itself and stop propagation\n    // in case any ancestors are also listening for this key.\n    if (this.open && event.key === 'Escape') {\n      event.stopPropagation();\n      this.hide();\n      this.focusOnTrigger();\n    }\n  };\n\n  private handleDocumentKeyDown = (event: KeyboardEvent) => {\n    // Close when escape or tab is pressed\n    if (event.key === 'Escape' && this.open) {\n      event.stopPropagation();\n      this.focusOnTrigger();\n      this.hide();\n      return;\n    }\n\n    // Handle tabbing\n    if (event.key === 'Tab') {\n      // Tabbing within an open menu should close the dropdown and refocus the trigger\n      if (this.open && document.activeElement?.tagName.toLowerCase() === 'flp-menu-item') {\n        event.preventDefault();\n        this.hide();\n        this.focusOnTrigger();\n        return;\n      }\n\n      // Tabbing outside of the containing element closes the panel\n      //\n      // If the dropdown is used within a shadow DOM, we need to obtain the activeElement within that shadowRoot,\n      // otherwise `document.activeElement` will only return the name of the parent shadow DOM element.\n      setTimeout(() => {\n        const activeElement =\n          this.containingElement?.getRootNode() instanceof ShadowRoot\n            ? document.activeElement?.shadowRoot?.activeElement\n            : document.activeElement;\n\n        if (\n          !this.containingElement ||\n          activeElement?.closest(this.containingElement.tagName.toLowerCase()) !== this.containingElement\n        ) {\n          this.hide();\n        }\n      });\n    }\n  };\n\n  private handleDocumentMouseDown = (event: MouseEvent) => {\n    // Close when clicking outside of the containing element\n    const path = event.composedPath();\n    if (this.containingElement && !path.includes(this.containingElement)) {\n      this.hide();\n    }\n  };\n\n  private handlePanelSelect = (event: FlpSelectEvent) => {\n    const target = event.target as HTMLElement;\n\n    // Hide the dropdown when a menu item is selected\n    if (!this.stayOpenOnSelect && target.tagName.toLowerCase() === 'flp-menu') {\n      this.hide();\n      this.focusOnTrigger();\n    }\n  };\n\n  handleTriggerClick() {\n    if (this.open) {\n      this.hide();\n    } else {\n      this.show();\n      this.focusOnTrigger();\n    }\n  }\n\n  async handleTriggerKeyDown(event: KeyboardEvent) {\n    // When spacebar/enter is pressed, show the panel but don't focus on the menu. This let's the user press the same\n    // key again to hide the menu in case they don't want to make a selection.\n    if ([' ', 'Enter'].includes(event.key)) {\n      event.preventDefault();\n      this.handleTriggerClick();\n      return;\n    }\n\n    const menu = this.getMenu();\n\n    if (menu) {\n      const menuItems = menu.getAllItems();\n      const firstMenuItem = menuItems[0];\n      const lastMenuItem = menuItems[menuItems.length - 1];\n\n      // When up/down is pressed, we make the assumption that the user is familiar with the menu and plans to make a\n      // selection. Rather than toggle the panel, we focus on the menu (if one exists) and activate the first item for\n      // faster navigation.\n      if (['ArrowDown', 'ArrowUp', 'Home', 'End'].includes(event.key)) {\n        event.preventDefault();\n\n        // Show the menu if it's not already open\n        if (!this.open) {\n          this.show();\n\n          // Wait for the dropdown to open before focusing, but not the animation\n          await this.updateComplete;\n        }\n\n        if (menuItems.length > 0) {\n          // Focus on the first/last menu item after showing\n          this.updateComplete.then(() => {\n            if (event.key === 'ArrowDown' || event.key === 'Home') {\n              menu.setCurrentItem(firstMenuItem);\n              firstMenuItem.focus();\n            }\n\n            if (event.key === 'ArrowUp' || event.key === 'End') {\n              menu.setCurrentItem(lastMenuItem);\n              lastMenuItem.focus();\n            }\n          });\n        }\n      }\n    }\n  }\n\n  handleTriggerKeyUp(event: KeyboardEvent) {\n    // Prevent space from triggering a click event in Firefox\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  }\n\n  handleTriggerSlotChange() {\n    this.updateAccessibleTrigger();\n  }\n\n  //\n  // Slotted triggers can be arbitrary content, but we need to link them to the dropdown panel with `aria-haspopup` and\n  // `aria-expanded`. These must be applied to the \"accessible trigger\" (the tabbable portion of the trigger element\n  // that gets slotted in) so screen readers will understand them. The accessible trigger could be the slotted element,\n  // a child of the slotted element, or an element in the slotted element's shadow root.\n  //\n  // For example, the accessible trigger of an <flp-button> is a <button> located inside its shadow root.\n  //\n  // To determine this, we assume the first tabbable element in the trigger slot is the \"accessible trigger.\"\n  //\n  updateAccessibleTrigger() {\n    const assignedElements = this.trigger.assignedElements({ flatten: true }) as HTMLElement[];\n    const accessibleTrigger = assignedElements.find(el => getTabbableBoundary(el).start);\n    let target: HTMLElement;\n\n    if (accessibleTrigger) {\n      switch (accessibleTrigger.tagName.toLowerCase()) {\n        // Shoelace buttons have to update the internal button so it's announced correctly by screen readers\n        case 'flp-button':\n        case 'flp-icon-button':\n          target = (accessibleTrigger as FlpButton | FlpIconButton).button;\n          break;\n\n        default:\n          target = accessibleTrigger;\n      }\n\n      target.setAttribute('aria-haspopup', 'true');\n      target.setAttribute('aria-expanded', this.open ? 'true' : 'false');\n    }\n  }\n\n  /** Shows the dropdown panel. */\n  async show() {\n    if (this.open) {\n      return undefined;\n    }\n\n    this.open = true;\n    return waitForEvent(this, 'flp-after-show');\n  }\n\n  /** Hides the dropdown panel */\n  async hide() {\n    if (!this.open) {\n      return undefined;\n    }\n\n    this.open = false;\n    return waitForEvent(this, 'flp-after-hide');\n  }\n\n  /**\n   * Instructs the dropdown menu to reposition. Useful when the position or size of the trigger changes when the menu\n   * is activated.\n   */\n  reposition() {\n    this.popup.reposition();\n  }\n\n  addOpenListeners() {\n    this.panel.addEventListener('flp-select', this.handlePanelSelect);\n    this.panel.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keydown', this.handleDocumentKeyDown);\n    document.addEventListener('mousedown', this.handleDocumentMouseDown);\n  }\n\n  removeOpenListeners() {\n    if (this.panel) {\n      this.panel.removeEventListener('flp-select', this.handlePanelSelect);\n      this.panel.removeEventListener('keydown', this.handleKeyDown);\n    }\n    document.removeEventListener('keydown', this.handleDocumentKeyDown);\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown);\n  }\n\n  @watch('open', { waitUntilFirstUpdate: true })\n  async handleOpenChange() {\n    if (this.disabled) {\n      this.open = false;\n      return;\n    }\n\n    this.updateAccessibleTrigger();\n\n    if (this.open) {\n      // Show\n      this.emit('flp-show');\n      this.addOpenListeners();\n\n      await stopAnimations(this);\n      this.panel.hidden = false;\n      this.popup.active = true;\n      const { keyframes, options } = getAnimation(this, 'dropdown.show', { dir: 'ltr' });\n      await animateTo(this.popup.popup, keyframes, options);\n\n      this.emit('flp-after-show');\n    } else {\n      // Hide\n      this.emit('flp-hide');\n      this.removeOpenListeners();\n\n      await stopAnimations(this);\n      const { keyframes, options } = getAnimation(this, 'dropdown.hide', { dir: 'ltr' });\n      await animateTo(this.popup.popup, keyframes, options);\n      this.panel.hidden = true;\n      this.popup.active = false;\n\n      this.emit('flp-after-hide');\n    }\n  }\n\n  render() {\n    return html`\n      <flp-popup\n        part=\"base\"\n        id=\"dropdown\"\n        placement=${this.placement}\n        distance=${this.distance}\n        skidding=${this.skidding}\n        strategy=${this.hoist ? 'fixed' : 'absolute'}\n        flip\n        shift\n        auto-size=\"vertical\"\n        auto-size-padding=\"10\"\n        class=${classMap({\n          dropdown: true,\n          'dropdown--open': this.open\n        })}\n      >\n        <slot\n          name=\"trigger\"\n          slot=\"anchor\"\n          part=\"trigger\"\n          class=\"dropdown__trigger\"\n          @click=${this.handleTriggerClick}\n          @keydown=${this.handleTriggerKeyDown}\n          @keyup=${this.handleTriggerKeyUp}\n          @slotchange=${this.handleTriggerSlotChange}\n        ></slot>\n\n        <div aria-hidden=${this.open ? 'false' : 'true'} aria-labelledby=\"dropdown\">\n          <slot part=\"panel\" class=\"dropdown__panel\"></slot>\n        </div>\n      </flp-popup>\n    `;\n  }\n}\n\nsetDefaultAnimation('dropdown.show', {\n  keyframes: [\n    { opacity: 0, scale: 0.9 },\n    { opacity: 1, scale: 1 }\n  ],\n  options: { duration: 100, easing: 'ease' }\n});\n\nsetDefaultAnimation('dropdown.hide', {\n  keyframes: [\n    { opacity: 1, scale: 1 },\n    { opacity: 0, scale: 0.9 }\n  ],\n  options: { duration: 100, easing: 'ease' }\n});\n"],"names":["flippico","css","componentStyles","FlpDropdown","FlpElement","event","_a","activeElement","_c","_b","path","target","trigger","el","menu","menuItems","firstMenuItem","lastMenuItem","accessibleTrigger","getTabbableBoundary","waitForEvent","stopAnimations","keyframes","options","getAnimation","animateTo","html","classMap","__decorateClass","query","property","watch","customElement","setDefaultAnimation"],"mappings":"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"}