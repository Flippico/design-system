{"version":3,"file":"flp-login.stories-C6QiXzXL.js","sources":["../src/components/flp-spinner/index.ts","../src/containers/flp-login/flp-login.styles.ts","../src/containers/flp-login/flp-login.ts"],"sourcesContent":["import * as React from 'react';\nimport {FlpSpinner as FlpSpinnerRaw} from './flp-spinner.js';\nimport { createComponent } from '@lit/react';\n\nexport * from './flp-spinner.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-spinner': FlpSpinnerRaw;\n  }\n}\n\nconst FlpSpinner = createComponent({\n  tagName: 'flp-spinner',\n  elementClass: FlpSpinnerRaw,\n  react: React,\n  events: {},\n  displayName: 'FlpSpinner'\n});\n\nexport {FlpSpinner};","import { css } from 'lit';\n\nexport const flippico = css`\n\n.auth-container {\n  max-width: 450px;\n  width: 100%;\n}\n.email--input {\n  margin-bottom: 20px;\n}\nflp-button {\n  width: 100%;\n}\n.mb-small {\n  margin-bottom: 10px;\n}\n.mb-medium {\n  margin-bottom: 40px;\n}\n.error {\n  color: var(--flp-color-warning-700);\n}\nh2 {\n  font-family: var(--flp-font-medium);\n}\n.text-align-center {\n  text-align: center;\n}\n.login-by-email-text {\n  margin-top: 30px;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.login-by-email-text--line {\n  height: 1px;\n  width: 20%;\n  background-color: black;\n}\n.password--and-forgot-password-link--container {\n  margin-bottom: 40px;\n}\n.password--and-forgot-password-link--container flp-button {\n  width: auto;\n}\n\n.forgot-password-link--container {\n  text-align: right;\n  --flp-spacing-medium: 0px;\n}\n`;\n\n","import { CSSResultGroup, html } from 'lit';\nimport FlpElement from '../../utils/flippico-element';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport \"./../../components/flp-card\";\nimport \"./../../components/flp-button\";\nimport \"./../../components/flp-input\";\nimport \"./../../components/flp-logo\";\nimport \"./../../components/flp-divider\";\nimport \"./../../components/flp-icon\";\nimport \"./../../components/flp-spinner\";\nimport { flippico } from './flp-login.styles';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { getApiUrl } from '../../utils/get-api-url';\n\n/**\n * @summary This the flp-login component\n *\n * @tag flp-login\n */\n@customElement(\"flp-login\")\nexport class FlpLogin extends FlpElement {\n  static styles: CSSResultGroup = [flippico];\n\n  @property({ type: String, attribute: \"tenant_key\" }) tenantKey = '';\n  @property({ type: String, attribute: \"logo\" }) logo = '';\n  @property({ type: String, attribute: \"signup_url\" }) signUpUrl = '';\n  @property({ type: String, attribute: \"reset_password_url\" }) resetPasswordUrl = '';\n  @property({ type: Boolean, attribute: \"staging\" }) staging = false;\n  @property({ type: Boolean, attribute: \"develop\" }) develop = false;\n  @property({ type: Boolean, attribute: \"mobile_login\" }) mobileLogin = false;\n\n  @state() errorText: null | string;\n  @state() loginPending: boolean = false;\n\n  async loginByGoogle() {\n    fetch(`${getApiUrl(this.staging, this.develop)}/api/${this.tenantKey}/google`, {\n      method: \"GET\",\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        if (response.status === 404) {\n          this.errorText = \"User not found\";\n          throw new Error(\"User not found\");\n        }\n        if (response.status === 403) {\n          this.errorText = \"Incorrect password\";\n          throw new Error(\"Incorrect password\");\n        }\n      })\n      .then((response: any) => {\n        window.location.href = response.message.redirect_url;\n      })\n      .catch(console.error)\n      .finally(() => this.loginPending = false);\n  }\n\n  async loginByApple() {\n    console.log('login by apple');\n  }\n\n  async onSubmitHandle(event: any) {\n    event.preventDefault();\n    this.loginPending = true;\n    const formData = new FormData(event.target);\n    if (Array.from(formData.values()).some(item => item === '')) {\n      this.errorText = 'Password or email is empty';\n      this.loginPending = false;\n      return;\n    }\n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"tenant_key\", this.tenantKey);\n    urlencoded.append(\"email\", formData.get(\"email\") as string);\n    urlencoded.append(\"password\", formData.get(\"password\") as string);\n\n    this.errorText = null;\n    fetch(`${getApiUrl(this.staging, this.develop)}/api/${this.tenantKey}/login`, {\n      method: \"POST\",\n      body: urlencoded,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        if (response.status === 404) {\n          this.errorText = \"User not found\";\n          throw new Error(\"User not found\");\n        }\n        if (response.status === 403) {\n          this.errorText = \"Incorrect password\";\n          throw new Error(\"Incorrect password\");\n        }\n      })\n      .then((response: any) => {\n        this.emit('flp-login-success', response.message);\n        window.parent.postMessage({ type: 'LOGIN_SUCCESS', payload: response.message }, '*');\n        window.location.href = response.message.redirect_url;\n      })\n      .catch(console.error)\n      .finally(() => this.loginPending = false);\n  }\n\n  render() {\n    return html`\n    <flp-card class=\"auth-container\">\n      <form .action=${`/api/${this.tenantKey}/google`} method=\"get\">\n        <div class=\"logo-container text-align-center\">\n          ${this.logo ? html`<img .src=${this.logo} alt=\"logo\" width=\"150\" height=\"auto\" />` : html`<flp-logo></flp-logo>`}\n        </div>\n        <h2 class=\"text-align-center\">Witaj!</h2>\n        <flp-button size=\"large\" variant=\"default\" type=\"submit\">\n          <flp-icon slot=\"prefix\" name=\"google\"></flp-icon>\n          Zaloguj się z Google\n        </flp-button>\n      </form>\n      <br/>\n      <form .action=${`/api/${this.tenantKey}/apple`} method=\"get\">\n        <flp-button size=\"large\" variant=\"default\" type=\"submit\">\n          <flp-icon slot=\"prefix\" name=\"apple\"></flp-icon>\n          Zaloguj się z Apple\n        </flp-button>\n      </form>\n        <div class=\"login-by-email-text\">\n          <div class=\"login-by-email-text--line\"></div>\n          <div class=\"text-align-center\">Lub zaloguj się przez email</div>\n          <div class=\"login-by-email-text--line\"></div>\n        </div>\n      </form>\n      <form @submit=${this.onSubmitHandle}>\n        <flp-input class=\"email--input\" type=\"email\" required name=\"email\" label=\"Email\"></flp-input>\n        <div class=\"password--and-forgot-password-link--container\">\n          <flp-input name=\"password\" required type=\"password\" label=\"Hasło\" password-toggle></flp-input>\n          <div class=\"forgot-password-link--container\">\n            <flp-button variant=\"text\" href=${this.resetPasswordUrl}>Zresetuj hasło</flp-button>\n          </div>\n        </div>\n        <input type=\"hidden\" name=\"tenant_key\" value=${this.tenantKey}/>\n        <flp-button\n          class=\"mb-small\"\n          size=\"large\"\n          variant=\"primary\"\n          type=\"submit\"\n          .loading=${ifDefined(this.loginPending)}\n          .disabled=${ifDefined(this.loginPending)}\n        >Zaloguj się</flp-button>\n        <flp-button class=\"mb-medium\" href=${this.signUpUrl} variant=\"primary\" size=\"large\" outline>Utwórz nowe konto przez email</flp-button>\n        <div class=\"error\">${this.errorText}</div>\n      </form>\n    </flp-card>`;\n  }\n}\n"],"names":["createComponent","FlpSpinnerRaw","React","flippico","css","FlpLogin","FlpElement","getApiUrl","response","event","formData","item","urlencoded","html","ifDefined","__decorateClass","property","state","customElement"],"mappings":"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"}