{"version":3,"file":"flp-set-new-password.stories-DF0e2y3C.js","sources":["../src/containers/flp-set-new-password/flp-set-new-password.styles.ts","../src/containers/flp-set-new-password/flp-set-new-password.ts"],"sourcesContent":["import { css } from 'lit';\n\nexport const flippico = css`\nflp-button {\n  width: 100%;\n}\n.error {\n  color: var(--flp-color-warning-700);\n}\nh2 {\n  font-family: var(--flp-font-medium);\n}\n.auth-container {\n  max-width: 450px;\n  width: 100%;\n}\n.mb-small {\n  margin-bottom: 20px;\n}\n.mb-medium {\n  margin-bottom: 40px;\n}\n.text-align-center {\n  text-align: center;\n}\n.forgot-password-link--container {\n  text-align: right;\n  --flp-spacing-medium: 0px;\n}\n.login--button {\n  width: auto;\n}\n.login-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n`;","import { CSSResultGroup, html } from 'lit';\nimport FlpElement from '../../utils/flippico-element';\nimport {customElement, property, state} from 'lit/decorators.js';\n\nimport { flippico } from './flp-set-new-password.styles';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { getApiUrl } from '../../utils/get-api-url';\n\n/**\n * @summary This the flp-set-new-password component\n *\n * @tag flp-set-new-password\n */\n @customElement(\"flp-set-new-password\")\nexport class FlpSetNewPassword extends FlpElement {\n  static styles: CSSResultGroup = [flippico];\n\n  @property({ type: String, attribute: \"tenant_key\" }) tenantKey = '';\n  @property({ type: String, attribute: \"token\" }) token = '';\n  @property({ type: String, attribute: \"logo\" }) logo = '';\n  @property({ type: Boolean, attribute: \"staging\" }) staging = false;\n  @property({ type: Boolean, attribute: \"develop\" }) develop = false;\n\n  @state() errorText: null | string;\n  @state() loginPending: boolean = false;\n  @state() successState: boolean = false;\n\n  async onSubmitHandle(event: any) {\n    event.preventDefault();\n    this.loginPending = true;\n    const formData = new FormData(event.target);\n    if (Array.from(formData.values()).some(item => item === '')) {\n      this.errorText = 'Password is empty';\n      this.loginPending = false;\n      return;\n    }\n    const urlencoded = new URLSearchParams();\n    if (!/^(?=.*\\d.*\\d)[A-Za-z\\d!@#$%^&*()_+\\-=[\\]{};':\",.<>?\\/]{6,}$/.test(formData.get(\"password\") as string)) {\n      this.errorText = 'At least 8 characters and at least two numbers';\n      this.loginPending = false;\n      return;\n    }\n    if (formData.get(\"new_password\") !== formData.get(\"password\")) {\n      this.errorText = 'Passwords are different';\n      this.loginPending = false;\n      return;\n    }\n    urlencoded.append(\"new_password\", formData.get(\"new_password\") as string);\n    urlencoded.append(\"password\", formData.get(\"password\") as string);\n    urlencoded.append(\"token\", formData.get(\"token\") as string);\n\n    this.errorText = null;\n    fetch(`${getApiUrl(this.staging, this.develop)}/api/${this.tenantKey}/set-password/${formData.get(\"token\")}`, {\n      method: \"POST\",\n      body: urlencoded,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    })\n    .then((response) => {\n      if (response.ok) {\n        return response.json()\n      }\n      this.errorText = \"Something went wrong, try again\";\n      event.target.reset();\n      throw new Error(\"Something went wrong, try again\");\n    })\n    .then((response) => {\n      this.emit('flp-set-new-password-success');\n      window.parent.postMessage({ type: 'SET_NEW_PASSWORD_SUCCESS', payload: {} }, '*');\n      window.location.href = response.message.redirect_url;\n    })\n    .catch(console.error)\n    .finally(() => this.loginPending = false);\n  }\n\n  render() {\n    return html`<flp-card class=\"auth-container\">\n      <form @submit=${this.onSubmitHandle}>\n        <div class=\"logo-container text-align-center\">\n          ${this.logo ? html`<img .src=${this.logo} alt=\"logo\" width=\"150\" height=\"150\" />` : html`<flp-logo></flp-logo>`}\n        </div>\n        <h2 class=\"text-align-center\">Set new password</h2>\n        <div class=\"mb-medium text-align-center\">\n          <span class=\"text-align-center\">Make sure to save password in a password manager</span>\n        </div>\n        <flp-input class=\"mb-small\" name=\"password\" required type=\"password\" label=\"Password\" help-text=\"At least 8 characters and at least two numbers\" password-toggle></flp-input>\n        <flp-input class=\"mb-small\" name=\"new_password\" required type=\"password\" label=\"Repeat password\" password-toggle></flp-input>\n        <input name=\"token\" value=${this.token} type=\"hidden\">\n        ${this.successState ? html`<maui-icon name=\"check-circle\"></maui-icon>` : html`<flp-button \n          class=\"mb-small\" \n          size=\"large\" \n          variant=\"primary\" \n          type=\"submit\" \n          .loading=${ifDefined(this.loginPending)} \n          .disabled=${ifDefined(this.loginPending)}\n        >Set new password</flp-button>`}\n        <div class=\"error\">${this.errorText}</div>\n      </form>\n    </flp-card>`;\n  }\n}\n"],"names":["flippico","css","FlpSetNewPassword","FlpElement","event","formData","item","urlencoded","getApiUrl","response","html","ifDefined","__decorateClass","property","state","customElement"],"mappings":"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"}