{"version":3,"file":"component.styles-CJs1ohMC.js","sources":["../../src/utils/flippico-element.ts","../../node_modules/@lit/reactive-element/decorators/custom-element.js","../../src/styles/component.styles.ts"],"sourcesContent":["import { LitElement } from 'lit';\n\n// Match event type name strings that are registered on GlobalEventHandlersEventMap...\ntype EventTypeRequiresDetail<T> = T extends keyof GlobalEventHandlersEventMap\n  ? // ...where the event detail is an object...\n    GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, unknown>>\n    ? // ...that is non-empty...\n      GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, never>>\n      ? never\n      : // ...and has at least one non-optional property\n        Partial<GlobalEventHandlersEventMap[T]['detail']> extends GlobalEventHandlersEventMap[T]['detail']\n        ? never\n        : T\n    : never\n  : never;\n\n// The inverse of the above (match any type that doesn't match EventTypeRequiresDetail)\ntype EventTypeDoesNotRequireDetail<T> = T extends keyof GlobalEventHandlersEventMap\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, unknown>>\n    ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, never>>\n      ? T\n      : Partial<GlobalEventHandlersEventMap[T]['detail']> extends GlobalEventHandlersEventMap[T]['detail']\n        ? T\n        : never\n    : T\n  : T;\n\n// `keyof EventTypesWithRequiredDetail` lists all registered event types that require detail\ntype EventTypesWithRequiredDetail = {\n  [EventType in keyof GlobalEventHandlersEventMap as EventTypeRequiresDetail<EventType>]: true;\n};\n\n// `keyof EventTypesWithoutRequiredDetail` lists all registered event types that do NOT require detail\ntype EventTypesWithoutRequiredDetail = {\n  [EventType in keyof GlobalEventHandlersEventMap as EventTypeDoesNotRequireDetail<EventType>]: true;\n};\n\n// Helper to make a specific property of an object non-optional\ntype WithRequired<T, K extends keyof T> = T & { [P in K]-?: T[P] };\n\n// Given an event name string, get a valid type for the options to initialize the event that is more restrictive than\n// just CustomEventInit when appropriate (validate the type of the event detail, and require it to be provided if the\n// event requires it)\ntype FlpEventInit<T> = T extends keyof GlobalEventHandlersEventMap\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, unknown>>\n    ? GlobalEventHandlersEventMap[T] extends CustomEvent<Record<PropertyKey, never>>\n      ? CustomEventInit<GlobalEventHandlersEventMap[T]['detail']>\n      : Partial<GlobalEventHandlersEventMap[T]['detail']> extends GlobalEventHandlersEventMap[T]['detail']\n        ? CustomEventInit<GlobalEventHandlersEventMap[T]['detail']>\n        : WithRequired<CustomEventInit<GlobalEventHandlersEventMap[T]['detail']>, 'detail'>\n    : CustomEventInit\n  : CustomEventInit;\n\n// Given an event name string, get the type of the event\ntype GetCustomEventType<T> = T extends keyof GlobalEventHandlersEventMap\n  ? GlobalEventHandlersEventMap[T] extends CustomEvent<unknown>\n    ? GlobalEventHandlersEventMap[T]\n    : CustomEvent<unknown>\n  : CustomEvent<unknown>;\n\n// `keyof ValidEventTypeMap` is equivalent to `keyof GlobalEventHandlersEventMap` but gives a nicer error message\ntype ValidEventTypeMap = EventTypesWithRequiredDetail | EventTypesWithoutRequiredDetail;\n\nexport default class FlpElement extends LitElement {\n  // Make localization attributes reactive\n  /** Emits a custom event with more convenient defaults. */\n  emit<T extends string & keyof EventTypesWithoutRequiredDetail>(\n    name: EventTypeDoesNotRequireDetail<T>,\n    options?: FlpEventInit<T> | undefined\n  ): GetCustomEventType<T>;\n  emit<T extends string & keyof EventTypesWithRequiredDetail>(\n    name: EventTypeRequiresDetail<T>,\n    options: FlpEventInit<T>\n  ): GetCustomEventType<T>;\n  emit<T extends string & keyof ValidEventTypeMap>(\n    name: T,\n    options?: FlpEventInit<T> | undefined\n  ): GetCustomEventType<T> {\n    const event = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: false,\n      composed: true,\n      detail: {},\n      ...options\n    });\n\n    this.dispatchEvent(event);\n\n    return event as GetCustomEventType<T>;\n  }\n\n  /* eslint-disable */\n  static version = '0.0.1';\n  /* eslint-enable */\n\n  static define(name: string, elementConstructor = this, options: ElementDefinitionOptions = {}) {\n    const currentlyRegisteredConstructor = customElements.get(name) as\n      | CustomElementConstructor\n      | typeof FlpElement;\n\n    if (!currentlyRegisteredConstructor) {\n      customElements.define(name, class extends elementConstructor {} as unknown as CustomElementConstructor, options);\n      return;\n    }\n\n    let newVersion = ' (unknown version)';\n    let existingVersion = newVersion;\n\n    if ('version' in elementConstructor && elementConstructor.version) {\n      newVersion = ' v' + elementConstructor.version;\n    }\n\n    if ('version' in currentlyRegisteredConstructor && currentlyRegisteredConstructor.version) {\n      existingVersion = ' v' + currentlyRegisteredConstructor.version;\n    }\n\n    // Need to make sure we're not working with null or empty strings before doing version comparisons.\n    if (newVersion && existingVersion && newVersion === existingVersion) {\n      // If versions match, we don't need to warn anyone. Carry on.\n      return;\n    }\n\n    console.warn(\n      `Attempted to register <${name}>${newVersion}, but <${name}>${existingVersion} has already been registered.`\n    );\n  }\n\n  static dependencies: Record<string, typeof FlpElement> = {};\n\n  constructor() {\n    super();\n    Object.entries((this.constructor as typeof FlpElement).dependencies).forEach(([name, component]) => {\n      (this.constructor as typeof FlpElement).define(name, component);\n    });\n  }\n}\n\nexport interface FlpFormControl extends FlpElement {\n  // Form attributes\n  name: string;\n  value: unknown;\n  disabled?: boolean;\n  defaultValue?: unknown;\n  defaultChecked?: boolean;\n  form?: string;\n\n  // Constraint validation attributes\n  pattern?: string;\n  min?: number | string | Date;\n  max?: number | string | Date;\n  step?: number | 'any';\n  required?: boolean;\n  minlength?: number;\n  maxlength?: number;\n\n  // Form validation properties\n  readonly validity: ValidityState;\n  readonly validationMessage: string;\n\n  // Form validation methods\n  checkValidity: () => boolean;\n  getForm: () => HTMLFormElement | null;\n  reportValidity: () => boolean;\n  setCustomValidity: (message: string) => void;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=t=>(e,o)=>{void 0!==o?o.addInitializer((()=>{customElements.define(t,e)})):customElements.define(t,e)};export{t as customElement};\n//# sourceMappingURL=custom-element.js.map\n","import { css } from 'lit';\n\nexport default css`\n  :host {\n    box-sizing: border-box;\n    font-family: var(--flp-font-light);\n  }\n\n  :host *,\n  :host *::before,\n  :host *::after {\n    box-sizing: inherit;\n  }\n\n  [hidden] {\n    display: none !important;\n  }\n`;\n"],"names":["_FlpElement","LitElement","name","options","event","elementConstructor","currentlyRegisteredConstructor","newVersion","existingVersion","component","FlpElement","t","o","componentStyles","css"],"mappings":"qDA+DA,MAAqBA,EAArB,MAAqBA,UAAmBC,CAAW,CAWjD,KACEC,EACAC,EACuB,CACjB,MAAAC,EAAQ,IAAI,YAAYF,EAAM,CAClC,QAAS,GACT,WAAY,GACZ,SAAU,GACV,OAAQ,CAAC,EACT,GAAGC,CAAA,CACJ,EAED,YAAK,cAAcC,CAAK,EAEjBA,CACT,CAMA,OAAO,OAAOF,EAAcG,EAAqB,KAAMF,EAAoC,CAAA,EAAI,CACvF,MAAAG,EAAiC,eAAe,IAAIJ,CAAI,EAI9D,GAAI,CAACI,EAAgC,CACpB,eAAA,OAAOJ,EAAM,cAAcG,CAAmB,GAA2CF,CAAO,EAC/G,MACF,CAEA,IAAII,EAAa,qBACbC,EAAkBD,EAElB,YAAaF,GAAsBA,EAAmB,UACxDE,EAAa,KAAOF,EAAmB,SAGrC,YAAaC,GAAkCA,EAA+B,UAChFE,EAAkB,KAAOF,EAA+B,SAItD,EAAAC,GAAcC,GAAmBD,IAAeC,IAK5C,QAAA,KACN,0BAA0BN,CAAI,IAAIK,CAAU,UAAUL,CAAI,IAAIM,CAAe,+BAAA,CAEjF,CAIA,aAAc,CACN,QACC,OAAA,QAAS,KAAK,YAAkC,YAAY,EAAE,QAAQ,CAAC,CAACN,EAAMO,CAAS,IAAM,CACjG,KAAK,YAAkC,OAAOP,EAAMO,CAAS,CAAA,CAC/D,CACH,CACF,EA3CET,EAAO,QAAU,QAmCjBA,EAAO,aAAkD,GAhE3D,IAAqBU,EAArBV,EC/DA;AAAA;AAAA;AAAA;AAAA,GAKK,MAACW,EAAEA,GAAG,CAAC,EAAEC,IAAI,CAAUA,IAAT,OAAWA,EAAE,eAAgB,IAAI,CAAC,eAAe,OAAOD,EAAE,CAAC,CAAC,CAAG,EAAC,eAAe,OAAOA,EAAE,CAAC,CAAC,ECH7GE,EAAeC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;","x_google_ignoreList":[1]}