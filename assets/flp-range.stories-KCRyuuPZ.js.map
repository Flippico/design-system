{"version":3,"file":"flp-range.stories-KCRyuuPZ.js","sources":["../../node_modules/@lit/reactive-element/decorators/event-options.js","../../src/components/flp-range/flp-range.styles.ts","../../src/components/flp-range/flp-range.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nfunction t(t){return(n,o)=>{const c=\"function\"==typeof n?n:n[o];Object.assign(c,t)}}export{t as eventOptions};\n//# sourceMappingURL=event-options.js.map\n","import { css } from 'lit';\n\nexport default css`\n  :host {\n    --thumb-size: 20px;\n    --tooltip-offset: 10px;\n    --track-color-active: var(--flp-color-neutral-200);\n    --track-color-inactive: var(--flp-color-neutral-200);\n    --track-active-offset: 0%;\n    --track-height: 6px;\n\n    display: block;\n  }\n\n  .range {\n    position: relative;\n  }\n\n  .range__control {\n    --percent: 0%;\n    -webkit-appearance: none;\n    border-radius: 3px;\n    width: 100%;\n    height: var(--track-height);\n    background: transparent;\n    line-height: var(--flp-input-height-medium);\n    vertical-align: middle;\n    margin: 0;\n\n    background-image: linear-gradient(\n      to right,\n      var(--track-color-inactive) 0%,\n      var(--track-color-inactive) min(var(--percent), var(--track-active-offset)),\n      var(--track-color-active) min(var(--percent), var(--track-active-offset)),\n      var(--track-color-active) max(var(--percent), var(--track-active-offset)),\n      var(--track-color-inactive) max(var(--percent), var(--track-active-offset)),\n      var(--track-color-inactive) 100%\n    );\n  }\n\n  .range--rtl .range__control {\n    background-image: linear-gradient(\n      to left,\n      var(--track-color-inactive) 0%,\n      var(--track-color-inactive) min(var(--percent), var(--track-active-offset)),\n      var(--track-color-active) min(var(--percent), var(--track-active-offset)),\n      var(--track-color-active) max(var(--percent), var(--track-active-offset)),\n      var(--track-color-inactive) max(var(--percent), var(--track-active-offset)),\n      var(--track-color-inactive) 100%\n    );\n  }\n\n  /* Webkit */\n  .range__control::-webkit-slider-runnable-track {\n    width: 100%;\n    height: var(--track-height);\n    border-radius: 3px;\n    border: none;\n  }\n\n  .range__control::-webkit-slider-thumb {\n    border: none;\n    width: var(--thumb-size);\n    height: var(--thumb-size);\n    border-radius: 50%;\n    background-color: var(--flp-color-primary-600);\n    border: solid var(--flp-input-border-width) var(--flp-color-primary-600);\n    -webkit-appearance: none;\n    margin-top: calc(var(--thumb-size) / -2 + var(--track-height) / 2);\n    cursor: pointer;\n  }\n\n  .range__control:enabled::-webkit-slider-thumb:hover {\n    background-color: var(--flp-color-primary-500);\n    border-color: var(--flp-color-primary-500);\n  }\n\n  .range__control:enabled:focus-visible::-webkit-slider-thumb {\n    outline: var(--flp-focus-ring);\n    outline-offset: var(--flp-focus-ring-offset);\n  }\n\n  .range__control:enabled::-webkit-slider-thumb:active {\n    background-color: var(--flp-color-primary-500);\n    border-color: var(--flp-color-primary-500);\n    cursor: grabbing;\n  }\n\n  /* Firefox */\n  .range__control::-moz-focus-outer {\n    border: 0;\n  }\n\n  .range__control::-moz-range-progress {\n    background-color: var(--track-color-active);\n    border-radius: 3px;\n    height: var(--track-height);\n  }\n\n  .range__control::-moz-range-track {\n    width: 100%;\n    height: var(--track-height);\n    background-color: var(--track-color-inactive);\n    border-radius: 3px;\n    border: none;\n  }\n\n  .range__control::-moz-range-thumb {\n    border: none;\n    height: var(--thumb-size);\n    width: var(--thumb-size);\n    border-radius: 50%;\n    background-color: var(--flp-color-primary-600);\n    border-color: var(--flp-color-primary-600);\n    transition:\n      var(--flp-transition-fast) border-color,\n      var(--flp-transition-fast) background-color,\n      var(--flp-transition-fast) color,\n      var(--flp-transition-fast) box-shadow;\n    cursor: pointer;\n  }\n\n  .range__control:enabled::-moz-range-thumb:hover {\n    background-color: var(--flp-color-primary-500);\n    border-color: var(--flp-color-primary-500);\n  }\n\n  .range__control:enabled:focus-visible::-moz-range-thumb {\n    outline: var(--flp-focus-ring);\n    outline-offset: var(--flp-focus-ring-offset);\n  }\n\n  .range__control:enabled::-moz-range-thumb:active {\n    background-color: var(--flp-color-primary-500);\n    border-color: var(--flp-color-primary-500);\n    cursor: grabbing;\n  }\n\n  /* States */\n  .range__control:focus-visible {\n    outline: none;\n  }\n\n  .range__control:disabled {\n    opacity: 0.5;\n  }\n\n  .range__control:disabled::-webkit-slider-thumb {\n    cursor: not-allowed;\n  }\n\n  .range__control:disabled::-moz-range-thumb {\n    cursor: not-allowed;\n  }\n\n  /* Tooltip output */\n  .range__tooltip {\n    position: absolute;\n    z-index: var(--flp-z-index-tooltip);\n    left: 0;\n    border-radius: var(--flp-tooltip-border-radius);\n    background-color: var(--flp-tooltip-background-color);\n    font-family: var(--flp-tooltip-font-family);\n    font-size: var(--flp-tooltip-font-size);\n    font-weight: var(--flp-tooltip-font-weight);\n    line-height: var(--flp-tooltip-line-height);\n    color: var(--flp-tooltip-color);\n    opacity: 0;\n    padding: var(--flp-tooltip-padding);\n    transition: var(--flp-transition-fast) opacity;\n    pointer-events: none;\n  }\n\n  .range__tooltip:after {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    left: 50%;\n    translate: calc(-1 * var(--flp-tooltip-arrow-size));\n  }\n\n  .range--tooltip-visible .range__tooltip {\n    opacity: 1;\n  }\n\n  /* Tooltip on top */\n  .range--tooltip-top .range__tooltip {\n    top: calc(-1 * var(--thumb-size) - var(--tooltip-offset));\n  }\n\n  .range--tooltip-top .range__tooltip:after {\n    border-top: var(--flp-tooltip-arrow-size) solid var(--flp-tooltip-background-color);\n    border-left: var(--flp-tooltip-arrow-size) solid transparent;\n    border-right: var(--flp-tooltip-arrow-size) solid transparent;\n    top: 100%;\n  }\n\n  /* Tooltip on bottom */\n  .range--tooltip-bottom .range__tooltip {\n    bottom: calc(-1 * var(--thumb-size) - var(--tooltip-offset));\n  }\n\n  .range--tooltip-bottom .range__tooltip:after {\n    border-bottom: var(--flp-tooltip-arrow-size) solid var(--flp-tooltip-background-color);\n    border-left: var(--flp-tooltip-arrow-size) solid transparent;\n    border-right: var(--flp-tooltip-arrow-size) solid transparent;\n    bottom: 100%;\n  }\n\n  @media (forced-colors: active) {\n    .range__control,\n    .range__tooltip {\n      border: solid 1px transparent;\n    }\n\n    .range__control::-webkit-slider-thumb {\n      border: solid 1px transparent;\n    }\n\n    .range__control::-moz-range-thumb {\n      border: solid 1px transparent;\n    }\n\n    .range__tooltip:after {\n      display: none;\n    }\n  }\n`;\n","import { classMap } from 'lit/directives/class-map.js';\nimport { customElement, eventOptions, property, query, state } from 'lit/decorators.js';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\nimport componentStyles from '../../styles/component.styles.js';\nimport formControlStyles from '../../styles/form-control.styles.js';\nimport styles from './flp-range.styles.js';\nimport type { CSSResultGroup } from 'lit';\nimport { FormControlController } from '../../utils/form.js';\nimport { HasSlotController } from '../../utils/slot.js';\nimport FlpElement, { FlpFormControl } from '../../utils/flippico-element.js';\nimport { defaultValue } from '../../utils/default-value.js';\nimport { watch } from '../../utils/watch.js';\n\n@customElement(\"flp-range\")\nexport class FlpRange extends FlpElement implements FlpFormControl {\n  static styles: CSSResultGroup = [componentStyles, formControlStyles, styles];\n\n  private readonly formControlController = new FormControlController(this);\n  private readonly hasSlotController = new HasSlotController(this, 'help-text', 'label');\n  private resizeObserver: ResizeObserver;\n\n  @query('.range__control') input: HTMLInputElement;\n  @query('.range__tooltip') output: HTMLOutputElement | null;\n\n  @state() private hasFocus = false;\n  @state() private hasTooltip = false;\n  @property() title = ''; // make reactive to pass through\n\n  /** The name of the range, submitted as a name/value pair with form data. */\n  @property() name = '';\n\n  /** The current value of the range, submitted as a name/value pair with form data. */\n  @property({ type: Number }) value = 0;\n\n  /** The range's label. If you need to display HTML, use the `label` slot instead. */\n  @property() label = '';\n\n  /** The range's help text. If you need to display HTML, use the help-text slot instead. */\n  @property({ attribute: 'help-text' }) helpText = '';\n\n  /** Disables the range. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /** The minimum acceptable value of the range. */\n  @property({ type: Number }) min = 0;\n\n  /** The maximum acceptable value of the range. */\n  @property({ type: Number }) max = 100;\n\n  /** The interval at which the range will increase and decrease. */\n  @property({ type: Number }) step = 1;\n\n  /** The preferred placement of the range's tooltip. */\n  @property() tooltip: 'top' | 'bottom' | 'none' = 'top';\n\n  /**\n   * A function used to format the tooltip's value. The range's value is passed as the first and only argument. The\n   * function should return a string to display in the tooltip.\n   */\n  @property({ attribute: false }) tooltipFormatter: (value: number) => string = (value: number) => value.toString();\n\n  /**\n   * By default, form controls are associated with the nearest containing `<form>` element. This attribute allows you\n   * to place the form control outside of a form and associate it with the form that has this `id`. The form must be in\n   * the same document or shadow root for this to work.\n   */\n  @property({ reflect: true }) form = '';\n\n  /** The default value of the form control. Primarily used for resetting the form control. */\n  @defaultValue() defaultValue = 0;\n\n  /** Gets the validity state object */\n  get validity() {\n    return this.input.validity;\n  }\n\n  /** Gets the validation message */\n  get validationMessage() {\n    return this.input.validationMessage;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.resizeObserver = new ResizeObserver(() => this.syncRange());\n\n    if (this.value < this.min) {\n      this.value = this.min;\n    }\n    if (this.value > this.max) {\n      this.value = this.max;\n    }\n\n    this.updateComplete.then(() => {\n      this.syncRange();\n      this.resizeObserver.observe(this.input);\n    });\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.resizeObserver?.unobserve(this.input);\n  }\n\n  private handleChange() {\n    this.emit('flp-change');\n  }\n\n  private handleInput() {\n    this.value = parseFloat(this.input.value);\n    this.emit('flp-input');\n    this.syncRange();\n  }\n\n  private handleBlur() {\n    this.hasFocus = false;\n    this.hasTooltip = false;\n    this.emit('flp-blur');\n  }\n\n  private handleFocus() {\n    this.hasFocus = true;\n    this.hasTooltip = true;\n    this.emit('flp-focus');\n  }\n\n  @eventOptions({ passive: true })\n  private handleThumbDragStart() {\n    this.hasTooltip = true;\n  }\n\n  private handleThumbDragEnd() {\n    this.hasTooltip = false;\n  }\n\n  private syncProgress(percent: number) {\n    this.input.style.setProperty('--percent', `${percent * 100}%`);\n  }\n\n  private syncTooltip(percent: number) {\n    if (this.output !== null) {\n      const inputWidth = this.input.offsetWidth;\n      const tooltipWidth = this.output.offsetWidth;\n      const thumbSize = getComputedStyle(this.input).getPropertyValue('--thumb-size');\n      const isRtl = this.matches(':dir(rtl)');\n      const percentAsWidth = inputWidth * percent;\n\n      // The calculations are used to \"guess\" where the thumb is located. Since we're using the native range control\n      // under the hood, we don't have access to the thumb's true coordinates. These measurements can be a pixel or two\n      // off depending on the size of the control, thumb, and tooltip dimensions.\n      if (isRtl) {\n        const x = `${inputWidth - percentAsWidth}px + ${percent} * ${thumbSize}`;\n        this.output.style.translate = `calc((${x} - ${tooltipWidth / 2}px - ${thumbSize} / 2))`;\n      } else {\n        const x = `${percentAsWidth}px - ${percent} * ${thumbSize}`;\n        this.output.style.translate = `calc(${x} - ${tooltipWidth / 2}px + ${thumbSize} / 2)`;\n      }\n    }\n  }\n\n  @watch('value', { waitUntilFirstUpdate: true })\n  handleValueChange() {\n    this.formControlController.updateValidity();\n\n    // The value may have constraints, so we set the native control's value and sync it back to ensure it adhere's to\n    // min, max, and step properly\n    this.input.value = this.value.toString();\n    this.value = parseFloat(this.input.value);\n\n    this.syncRange();\n  }\n\n  @watch('disabled', { waitUntilFirstUpdate: true })\n  handleDisabledChange() {\n    // Disabled form controls are always valid\n    this.formControlController.setValidity(this.disabled);\n  }\n\n  @watch('hasTooltip', { waitUntilFirstUpdate: true })\n  syncRange() {\n    const percent = Math.max(0, (this.value - this.min) / (this.max - this.min));\n\n    this.syncProgress(percent);\n\n    if (this.tooltip !== 'none') {\n      // Ensure updates are drawn before we sync the tooltip\n      this.updateComplete.then(() => this.syncTooltip(percent));\n    }\n  }\n\n  private handleInvalid(event: Event) {\n    this.formControlController.setValidity(false);\n    this.formControlController.emitInvalidEvent(event);\n  }\n\n  /** Sets focus on the range. */\n  focus(options?: FocusOptions) {\n    this.input.focus(options);\n  }\n\n  /** Removes focus from the range. */\n  blur() {\n    this.input.blur();\n  }\n\n  /** Increments the value of the range by the value of the step attribute. */\n  stepUp() {\n    this.input.stepUp();\n    if (this.value !== Number(this.input.value)) {\n      this.value = Number(this.input.value);\n    }\n  }\n\n  /** Decrements the value of the range by the value of the step attribute. */\n  stepDown() {\n    this.input.stepDown();\n    if (this.value !== Number(this.input.value)) {\n      this.value = Number(this.input.value);\n    }\n  }\n\n  /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */\n  checkValidity() {\n    return this.input.checkValidity();\n  }\n\n  /** Gets the associated form, if one exists. */\n  getForm(): HTMLFormElement | null {\n    return this.formControlController.getForm();\n  }\n\n  /** Checks for validity and shows the browser's validation message if the control is invalid. */\n  reportValidity() {\n    return this.input.reportValidity();\n  }\n\n  /** Sets a custom validation message. Pass an empty string to restore validity. */\n  setCustomValidity(message: string) {\n    this.input.setCustomValidity(message);\n    this.formControlController.updateValidity();\n  }\n\n  render() {\n    const hasLabelSlot = this.hasSlotController.test('label');\n    const hasHelpTextSlot = this.hasSlotController.test('help-text');\n    const hasLabel = this.label ? true : !!hasLabelSlot;\n    const hasHelpText = this.helpText ? true : !!hasHelpTextSlot;\n\n    // NOTE - always bind value after min/max, otherwise it will be clamped\n    return html`\n      <div\n        part=\"form-control\"\n        class=${classMap({\n          'form-control': true,\n          'form-control--medium': true, // range only has one size\n          'form-control--has-label': hasLabel,\n          'form-control--has-help-text': hasHelpText\n        })}\n      >\n        <label\n          part=\"form-control-label\"\n          class=\"form-control__label\"\n          for=\"input\"\n          aria-hidden=${hasLabel ? 'false' : 'true'}\n        >\n          <slot name=\"label\">${this.label}</slot>\n        </label>\n\n        <div part=\"form-control-input\" class=\"form-control-input\">\n          <div\n            part=\"base\"\n            class=${classMap({\n              range: true,\n              'range--disabled': this.disabled,\n              'range--focused': this.hasFocus,\n              'range--tooltip-visible': this.hasTooltip,\n              'range--tooltip-top': this.tooltip === 'top',\n              'range--tooltip-bottom': this.tooltip === 'bottom'\n            })}\n            @mousedown=${this.handleThumbDragStart}\n            @mouseup=${this.handleThumbDragEnd}\n            @touchstart=${this.handleThumbDragStart}\n            @touchend=${this.handleThumbDragEnd}\n          >\n            <input\n              part=\"input\"\n              id=\"input\"\n              class=\"range__control\"\n              title=${this.title /* An empty title prevents browser validation tooltips from appearing on hover */}\n              type=\"range\"\n              name=${ifDefined(this.name)}\n              ?disabled=${this.disabled}\n              min=${ifDefined(this.min)}\n              max=${ifDefined(this.max)}\n              step=${ifDefined(this.step)}\n              .value=${live(this.value.toString())}\n              aria-describedby=\"help-text\"\n              @change=${this.handleChange}\n              @focus=${this.handleFocus}\n              @input=${this.handleInput}\n              @invalid=${this.handleInvalid}\n              @blur=${this.handleBlur}\n            />\n            ${this.tooltip !== 'none' && !this.disabled\n              ? html`\n                  <output part=\"tooltip\" class=\"range__tooltip\">\n                    ${typeof this.tooltipFormatter === 'function' ? this.tooltipFormatter(this.value) : this.value}\n                  </output>\n                `\n              : ''}\n          </div>\n        </div>\n\n        <div\n          part=\"form-control-help-text\"\n          id=\"help-text\"\n          class=\"form-control__help-text\"\n          aria-hidden=${hasHelpText ? 'false' : 'true'}\n        >\n          <slot name=\"help-text\">${this.helpText}</slot>\n        </div>\n      </div>\n    `;\n  }\n}\n"],"names":["t","n","o","c","styles","css","FlpRange","FlpElement","FormControlController","HasSlotController","value","_a","percent","inputWidth","tooltipWidth","thumbSize","isRtl","percentAsWidth","x","event","options","message","hasLabelSlot","hasHelpTextSlot","hasLabel","hasHelpText","html","classMap","ifDefined","live","componentStyles","formControlStyles","__decorateClass","query","state","property","defaultValue","eventOptions","watch","customElement"],"mappings":"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","x_google_ignoreList":[0]}