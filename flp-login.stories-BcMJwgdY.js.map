{"version":3,"file":"flp-login.stories-BcMJwgdY.js","sources":["../src/components/flp-spinner/index.ts","../src/containers/flp-login/flp-login.styles.ts","../src/containers/flp-login/flp-login.ts"],"sourcesContent":["import * as React from 'react';\nimport {FlpSpinner as FlpSpinnerRaw} from './flp-spinner.js';\nimport { createComponent } from '@lit/react';\n\nexport * from './flp-spinner.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'flp-spinner': FlpSpinnerRaw;\n  }\n}\n\nconst FlpSpinner = createComponent({\n  tagName: 'flp-spinner',\n  elementClass: FlpSpinnerRaw,\n  react: React,\n  events: {},\n  displayName: 'FlpSpinner'\n});\n\nexport {FlpSpinner};","import { css } from 'lit';\n\nexport const flippico = css`\n\n.auth-container {\n  max-width: 450px;\n  width: 100%;\n}\n.email--input {\n  margin-bottom: 20px;\n}\nflp-button {\n  width: 100%;\n}\n.mb-small {\n  margin-bottom: 10px;\n}\n.mb-medium {\n  margin-bottom: 40px;\n}\n.error {\n  color: var(--flp-color-warning-700);\n}\nh2 {\n  font-family: var(--flp-font-medium);\n}\n.text-align-center {\n  text-align: center;\n}\n.login-by-email-text {\n  margin-top: 30px;\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.login-by-email-text--line {\n  height: 1px;\n  width: 30%;\n  background-color: black;\n}\n.password--and-forgot-password-link--container {\n  margin-bottom: 40px;\n}\n.password--and-forgot-password-link--container flp-button {\n  width: auto;\n}\n\n.forgot-password-link--container {\n  text-align: right;\n  --flp-spacing-medium: 0px;\n}\n`;\n\n","import { CSSResultGroup, html } from 'lit';\nimport FlpElement from '../../utils/flippico-element';\nimport {customElement, property, state} from 'lit/decorators.js';\nimport \"./../../components/flp-card\";\nimport \"./../../components/flp-button\";\nimport \"./../../components/flp-input\";\nimport \"./../../components/flp-logo\";\nimport \"./../../components/flp-divider\";\nimport \"./../../components/flp-icon\";\nimport \"./../../components/flp-spinner\";\nimport { flippico } from './flp-login.styles';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { getApiUrl } from '../../utils/get-api-url';\n\n/**\n * @summary This the flp-login component\n *\n * @tag flp-login\n */\n @customElement(\"flp-login\")\nexport class FlpLogin extends FlpElement {\n  static styles: CSSResultGroup = [flippico];\n\n  @property({ type: String, attribute: \"tenant_key\" }) tenantKey = '';\n  @property({ type: String, attribute: \"logo\" }) logo = '';\n  @property({ type: String, attribute: \"signup_url\" }) signUpUrl = '';\n  @property({ type: String, attribute: \"reset_password_url\" }) resetPasswordUrl = '';\n  @property({ type: Boolean, attribute: \"staging\" }) staging = false;\n  @property({ type: Boolean, attribute: \"develop\" }) develop = false;\n  @property({ type: Boolean, attribute: \"mobile_login\" }) mobileLogin = false;\n\n  @state() errorText: null | string;\n  @state() loginPending: boolean = false;\n\n  async loginByGoogle() {\n    console.log('login by google');\n  }\n\n  async loginByApple() {\n    console.log('login by apple');\n  }\n\n  async onSubmitHandle(event: any) {\n    event.preventDefault();\n    this.loginPending = true;\n    const formData = new FormData(event.target);\n    if (Array.from(formData.values()).some(item => item === '')) {\n      this.errorText = 'Password or email is empty';\n      this.loginPending = false;\n      return;\n    }\n    const urlencoded = new URLSearchParams();\n    urlencoded.append(\"tenant_key\", this.tenantKey);\n    urlencoded.append(\"name\", formData.get(\"name\") as string);\n    urlencoded.append(\"email\", formData.get(\"email\") as string);\n    urlencoded.append(\"password\", formData.get(\"password\") as string);\n\n    this.errorText = null;\n    fetch(`${getApiUrl(this.staging, this.develop)}/api/${this.tenantKey}/login`, {\n      method: \"POST\",\n      body: urlencoded,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    })\n    .then((response) => response.json())\n    .then((response) => {\n      window.location.href = `${response.message.redirect_url}?token=${response.message.token}`;\n    })\n    .catch(console.error)\n    .finally(() => this.loginPending = false);\n  }\n\n  render() {\n    return html`\n    <flp-card class=\"auth-container\">\n      <form @submit=${this.onSubmitHandle}>\n        <div class=\"logo-container text-align-center\">\n          ${this.logo ? html`<img .src=${this.logo} alt=\"logo\" width=\"150\" height=\"150\" />` : html`<flp-logo></flp-logo>`}\n        </div>\n        <h2 class=\"text-align-center\">Hello again!</h2>\n        <flp-button size=\"large\" variant=\"default\" @click=${this.loginByGoogle}>\n          <flp-icon slot=\"prefix\" name=\"google\"></flp-icon>\n          Login by Google\n        </flp-button>\n        <br/>\n        <br/>\n        <flp-button size=\"large\" variant=\"default\" @click=${this.loginByApple}>\n          <flp-icon slot=\"prefix\" name=\"apple\"></flp-icon>\n          Login by Apple\n        </flp-button>\n\n        <div class=\"login-by-email-text\">\n          <div class=\"login-by-email-text--line\"></div>\n          <div class=\"text-align-center\">or login by email</div>\n          <div class=\"login-by-email-text--line\"></div>\n        </div>\n\n        <flp-input class=\"email--input\" type=\"email\" required name=\"email\" label=\"Email\"></flp-input>\n        <div class=\"password--and-forgot-password-link--container\">\n          <flp-input name=\"password\" required type=\"password\" label=\"Password\" password-toggle></flp-input>\n          <div class=\"forgot-password-link--container\">\n            <flp-button variant=\"text\" href=${this.resetPasswordUrl}>Fogrot your password?</flp-button>\n          </div>\n        </div>\n        <input type=\"hidden\" name=\"tenant_key\" value=${this.tenantKey}/>\n        <flp-button \n          class=\"mb-small\" \n          size=\"large\" \n          variant=\"primary\" \n          type=\"submit\" \n          .loading=${ifDefined(this.loginPending)} \n          .disabled=${ifDefined(this.loginPending)}\n        >Login</flp-button>\n        <flp-button class=\"mb-medium\" href=${this.signUpUrl} variant=\"primary\" size=\"large\" outline>Create new account by email</flp-button>\n        <div class=\"error\">${this.errorText}</div>\n      </form>\n    </flp-card>`;\n  }\n}\n"],"names":["createComponent","FlpSpinnerRaw","React","flippico","css","FlpLogin","FlpElement","event","formData","item","urlencoded","getApiUrl","response","html","ifDefined","__decorateClass","property","state","customElement"],"mappings":"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"}