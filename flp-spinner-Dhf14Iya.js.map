{"version":3,"file":"flp-spinner-Dhf14Iya.js","sources":["../src/components/flp-spinner/flp-spinner.styles.ts","../src/components/flp-spinner/flp-spinner.ts"],"sourcesContent":["import { css } from 'lit';\nimport componentStyles from '../../styles/component.styles.js';\n\n// Resizing a spinner element using anything but font-size will break the animation because the animation uses em units.\n// Therefore, if a spinner is used in a flex container without `flex: none` applied, the spinner can grow/shrink and\n// break the animation. The use of `flex: none` on the host element prevents this by always having the spinner sized\n// according to its actual dimensions.\n\nexport default css`\n  ${componentStyles}\n\n  :host {\n    --track-width: 2px;\n    --track-color: rgb(128 128 128 / 25%);\n    --indicator-color: var(--flp-color-primary-600);\n    --speed: 2s;\n\n    display: inline-flex;\n    width: 1em;\n    height: 1em;\n    flex: none;\n  }\n\n  .spinner {\n    flex: 1 1 auto;\n    height: 100%;\n    width: 100%;\n  }\n\n  .spinner__track,\n  .spinner__indicator {\n    fill: none;\n    stroke-width: var(--track-width);\n    r: calc(0.5em - var(--track-width) / 2);\n    cx: 0.5em;\n    cy: 0.5em;\n    transform-origin: 50% 50%;\n  }\n\n  .spinner__track {\n    stroke: var(--track-color);\n    transform-origin: 0% 0%;\n  }\n\n  .spinner__indicator {\n    stroke: var(--indicator-color);\n    stroke-linecap: round;\n    stroke-dasharray: 150% 75%;\n    animation: spin var(--speed) linear infinite;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n      stroke-dasharray: 0.05em, 3em;\n    }\n\n    50% {\n      transform: rotate(450deg);\n      stroke-dasharray: 1.375em, 1.375em;\n    }\n\n    100% {\n      transform: rotate(1080deg);\n      stroke-dasharray: 0.05em, 3em;\n    }\n  }\n`;\n","import { html } from 'lit';\nimport styles from './flp-spinner.styles.js';\nimport type { CSSResultGroup } from 'lit';\nimport FlpElement from '../../utils/flippico-element.js';\nimport { customElement } from 'lit/decorators.js';\n\n@customElement(\"flp-spinner\")\nexport class FlpSpinner extends FlpElement {\n  static styles: CSSResultGroup = styles;\n  render() {\n    return html`\n      <svg part=\"base\" class=\"spinner\" role=\"progressbar\" aria-label=\"loading\">\n        <circle class=\"spinner__track\"></circle>\n        <circle class=\"spinner__indicator\"></circle>\n      </svg>\n    `;\n  }\n}\n"],"names":["styles","css","componentStyles","FlpSpinner","FlpElement","html","__decorateClass","customElement"],"mappings":"gKAQA,MAAAA,EAAeC;AAAAA,IACXC,CAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kMCFN,IAAAC,EAAN,cAAyBC,CAAW,CAEzC,QAAS,CACA,OAAAC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,KAMT,CACF,EAVaF,EACJ,OAAyBH,EADrBG,EAANG,EAAA,CADNC,EAAc,aAAa,CAAA,EACfJ,CAAA"}